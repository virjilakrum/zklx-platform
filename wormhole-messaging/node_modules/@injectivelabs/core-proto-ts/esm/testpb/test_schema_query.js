/* eslint-disable */
import { grpc } from "@injectivelabs/grpc-web";
import { BrowserHeaders } from "browser-headers";
import Long from "long";
import _m0 from "protobufjs/minimal";
import { PageRequest, PageResponse } from "../cosmos/base/query/v1beta1/pagination";
import { Timestamp } from "../google/protobuf/timestamp";
import { ExampleAutoIncFieldName, ExampleAutoIncrementTable, ExampleSingleton, ExampleTable, ExampleTimestamp, SimpleExample, } from "./test_schema";
function createBaseGetExampleTableRequest() {
    return { u32: 0, i64: "0", str: "" };
}
export const GetExampleTableRequest = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.u32 !== 0) {
            writer.uint32(8).uint32(message.u32);
        }
        if (message.i64 !== "0") {
            writer.uint32(16).int64(message.i64);
        }
        if (message.str !== "") {
            writer.uint32(26).string(message.str);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetExampleTableRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.u32 = reader.uint32();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.i64 = longToString(reader.int64());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.str = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            u32: isSet(object.u32) ? globalThis.Number(object.u32) : 0,
            i64: isSet(object.i64) ? globalThis.String(object.i64) : "0",
            str: isSet(object.str) ? globalThis.String(object.str) : "",
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.u32 !== 0) {
            obj.u32 = Math.round(message.u32);
        }
        if (message.i64 !== "0") {
            obj.i64 = message.i64;
        }
        if (message.str !== "") {
            obj.str = message.str;
        }
        return obj;
    },
    create(base) {
        return GetExampleTableRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b, _c;
        const message = createBaseGetExampleTableRequest();
        message.u32 = (_a = object.u32) !== null && _a !== void 0 ? _a : 0;
        message.i64 = (_b = object.i64) !== null && _b !== void 0 ? _b : "0";
        message.str = (_c = object.str) !== null && _c !== void 0 ? _c : "";
        return message;
    },
};
function createBaseGetExampleTableResponse() {
    return { value: undefined };
}
export const GetExampleTableResponse = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.value !== undefined) {
            ExampleTable.encode(message.value, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetExampleTableResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.value = ExampleTable.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { value: isSet(object.value) ? ExampleTable.fromJSON(object.value) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.value !== undefined) {
            obj.value = ExampleTable.toJSON(message.value);
        }
        return obj;
    },
    create(base) {
        return GetExampleTableResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseGetExampleTableResponse();
        message.value = (object.value !== undefined && object.value !== null)
            ? ExampleTable.fromPartial(object.value)
            : undefined;
        return message;
    },
};
function createBaseGetExampleTableByU64StrRequest() {
    return { u64: "0", str: "" };
}
export const GetExampleTableByU64StrRequest = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.u64 !== "0") {
            writer.uint32(8).uint64(message.u64);
        }
        if (message.str !== "") {
            writer.uint32(18).string(message.str);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetExampleTableByU64StrRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.u64 = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.str = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            u64: isSet(object.u64) ? globalThis.String(object.u64) : "0",
            str: isSet(object.str) ? globalThis.String(object.str) : "",
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.u64 !== "0") {
            obj.u64 = message.u64;
        }
        if (message.str !== "") {
            obj.str = message.str;
        }
        return obj;
    },
    create(base) {
        return GetExampleTableByU64StrRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseGetExampleTableByU64StrRequest();
        message.u64 = (_a = object.u64) !== null && _a !== void 0 ? _a : "0";
        message.str = (_b = object.str) !== null && _b !== void 0 ? _b : "";
        return message;
    },
};
function createBaseGetExampleTableByU64StrResponse() {
    return { value: undefined };
}
export const GetExampleTableByU64StrResponse = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.value !== undefined) {
            ExampleTable.encode(message.value, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetExampleTableByU64StrResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.value = ExampleTable.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { value: isSet(object.value) ? ExampleTable.fromJSON(object.value) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.value !== undefined) {
            obj.value = ExampleTable.toJSON(message.value);
        }
        return obj;
    },
    create(base) {
        return GetExampleTableByU64StrResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseGetExampleTableByU64StrResponse();
        message.value = (object.value !== undefined && object.value !== null)
            ? ExampleTable.fromPartial(object.value)
            : undefined;
        return message;
    },
};
function createBaseListExampleTableRequest() {
    return { prefixQuery: undefined, rangeQuery: undefined, pagination: undefined };
}
export const ListExampleTableRequest = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.prefixQuery !== undefined) {
            ListExampleTableRequest_IndexKey.encode(message.prefixQuery, writer.uint32(10).fork()).ldelim();
        }
        if (message.rangeQuery !== undefined) {
            ListExampleTableRequest_RangeQuery.encode(message.rangeQuery, writer.uint32(18).fork()).ldelim();
        }
        if (message.pagination !== undefined) {
            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleTableRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.prefixQuery = ListExampleTableRequest_IndexKey.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.rangeQuery = ListExampleTableRequest_RangeQuery.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.pagination = PageRequest.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            prefixQuery: isSet(object.prefixQuery)
                ? ListExampleTableRequest_IndexKey.fromJSON(object.prefixQuery)
                : undefined,
            rangeQuery: isSet(object.rangeQuery) ? ListExampleTableRequest_RangeQuery.fromJSON(object.rangeQuery) : undefined,
            pagination: isSet(object.pagination) ? PageRequest.fromJSON(object.pagination) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.prefixQuery !== undefined) {
            obj.prefixQuery = ListExampleTableRequest_IndexKey.toJSON(message.prefixQuery);
        }
        if (message.rangeQuery !== undefined) {
            obj.rangeQuery = ListExampleTableRequest_RangeQuery.toJSON(message.rangeQuery);
        }
        if (message.pagination !== undefined) {
            obj.pagination = PageRequest.toJSON(message.pagination);
        }
        return obj;
    },
    create(base) {
        return ListExampleTableRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseListExampleTableRequest();
        message.prefixQuery = (object.prefixQuery !== undefined && object.prefixQuery !== null)
            ? ListExampleTableRequest_IndexKey.fromPartial(object.prefixQuery)
            : undefined;
        message.rangeQuery = (object.rangeQuery !== undefined && object.rangeQuery !== null)
            ? ListExampleTableRequest_RangeQuery.fromPartial(object.rangeQuery)
            : undefined;
        message.pagination = (object.pagination !== undefined && object.pagination !== null)
            ? PageRequest.fromPartial(object.pagination)
            : undefined;
        return message;
    },
};
function createBaseListExampleTableRequest_IndexKey() {
    return { u32I64Str: undefined, u64Str: undefined, strU32: undefined, bzStr: undefined };
}
export const ListExampleTableRequest_IndexKey = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.u32I64Str !== undefined) {
            ListExampleTableRequest_IndexKey_U32I64Str.encode(message.u32I64Str, writer.uint32(10).fork()).ldelim();
        }
        if (message.u64Str !== undefined) {
            ListExampleTableRequest_IndexKey_U64Str.encode(message.u64Str, writer.uint32(18).fork()).ldelim();
        }
        if (message.strU32 !== undefined) {
            ListExampleTableRequest_IndexKey_StrU32.encode(message.strU32, writer.uint32(26).fork()).ldelim();
        }
        if (message.bzStr !== undefined) {
            ListExampleTableRequest_IndexKey_BzStr.encode(message.bzStr, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleTableRequest_IndexKey();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.u32I64Str = ListExampleTableRequest_IndexKey_U32I64Str.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.u64Str = ListExampleTableRequest_IndexKey_U64Str.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.strU32 = ListExampleTableRequest_IndexKey_StrU32.decode(reader, reader.uint32());
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.bzStr = ListExampleTableRequest_IndexKey_BzStr.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            u32I64Str: isSet(object.u32I64Str)
                ? ListExampleTableRequest_IndexKey_U32I64Str.fromJSON(object.u32I64Str)
                : undefined,
            u64Str: isSet(object.u64Str) ? ListExampleTableRequest_IndexKey_U64Str.fromJSON(object.u64Str) : undefined,
            strU32: isSet(object.strU32) ? ListExampleTableRequest_IndexKey_StrU32.fromJSON(object.strU32) : undefined,
            bzStr: isSet(object.bzStr) ? ListExampleTableRequest_IndexKey_BzStr.fromJSON(object.bzStr) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.u32I64Str !== undefined) {
            obj.u32I64Str = ListExampleTableRequest_IndexKey_U32I64Str.toJSON(message.u32I64Str);
        }
        if (message.u64Str !== undefined) {
            obj.u64Str = ListExampleTableRequest_IndexKey_U64Str.toJSON(message.u64Str);
        }
        if (message.strU32 !== undefined) {
            obj.strU32 = ListExampleTableRequest_IndexKey_StrU32.toJSON(message.strU32);
        }
        if (message.bzStr !== undefined) {
            obj.bzStr = ListExampleTableRequest_IndexKey_BzStr.toJSON(message.bzStr);
        }
        return obj;
    },
    create(base) {
        return ListExampleTableRequest_IndexKey.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseListExampleTableRequest_IndexKey();
        message.u32I64Str = (object.u32I64Str !== undefined && object.u32I64Str !== null)
            ? ListExampleTableRequest_IndexKey_U32I64Str.fromPartial(object.u32I64Str)
            : undefined;
        message.u64Str = (object.u64Str !== undefined && object.u64Str !== null)
            ? ListExampleTableRequest_IndexKey_U64Str.fromPartial(object.u64Str)
            : undefined;
        message.strU32 = (object.strU32 !== undefined && object.strU32 !== null)
            ? ListExampleTableRequest_IndexKey_StrU32.fromPartial(object.strU32)
            : undefined;
        message.bzStr = (object.bzStr !== undefined && object.bzStr !== null)
            ? ListExampleTableRequest_IndexKey_BzStr.fromPartial(object.bzStr)
            : undefined;
        return message;
    },
};
function createBaseListExampleTableRequest_IndexKey_U32I64Str() {
    return { u32: undefined, i64: undefined, str: undefined };
}
export const ListExampleTableRequest_IndexKey_U32I64Str = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.u32 !== undefined) {
            writer.uint32(8).uint32(message.u32);
        }
        if (message.i64 !== undefined) {
            writer.uint32(16).int64(message.i64);
        }
        if (message.str !== undefined) {
            writer.uint32(26).string(message.str);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleTableRequest_IndexKey_U32I64Str();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.u32 = reader.uint32();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.i64 = longToString(reader.int64());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.str = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            u32: isSet(object.u32) ? globalThis.Number(object.u32) : undefined,
            i64: isSet(object.i64) ? globalThis.String(object.i64) : undefined,
            str: isSet(object.str) ? globalThis.String(object.str) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.u32 !== undefined) {
            obj.u32 = Math.round(message.u32);
        }
        if (message.i64 !== undefined) {
            obj.i64 = message.i64;
        }
        if (message.str !== undefined) {
            obj.str = message.str;
        }
        return obj;
    },
    create(base) {
        return ListExampleTableRequest_IndexKey_U32I64Str.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b, _c;
        const message = createBaseListExampleTableRequest_IndexKey_U32I64Str();
        message.u32 = (_a = object.u32) !== null && _a !== void 0 ? _a : undefined;
        message.i64 = (_b = object.i64) !== null && _b !== void 0 ? _b : undefined;
        message.str = (_c = object.str) !== null && _c !== void 0 ? _c : undefined;
        return message;
    },
};
function createBaseListExampleTableRequest_IndexKey_U64Str() {
    return { u64: undefined, str: undefined };
}
export const ListExampleTableRequest_IndexKey_U64Str = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.u64 !== undefined) {
            writer.uint32(8).uint64(message.u64);
        }
        if (message.str !== undefined) {
            writer.uint32(18).string(message.str);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleTableRequest_IndexKey_U64Str();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.u64 = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.str = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            u64: isSet(object.u64) ? globalThis.String(object.u64) : undefined,
            str: isSet(object.str) ? globalThis.String(object.str) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.u64 !== undefined) {
            obj.u64 = message.u64;
        }
        if (message.str !== undefined) {
            obj.str = message.str;
        }
        return obj;
    },
    create(base) {
        return ListExampleTableRequest_IndexKey_U64Str.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseListExampleTableRequest_IndexKey_U64Str();
        message.u64 = (_a = object.u64) !== null && _a !== void 0 ? _a : undefined;
        message.str = (_b = object.str) !== null && _b !== void 0 ? _b : undefined;
        return message;
    },
};
function createBaseListExampleTableRequest_IndexKey_StrU32() {
    return { str: undefined, u32: undefined };
}
export const ListExampleTableRequest_IndexKey_StrU32 = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.str !== undefined) {
            writer.uint32(10).string(message.str);
        }
        if (message.u32 !== undefined) {
            writer.uint32(16).uint32(message.u32);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleTableRequest_IndexKey_StrU32();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.str = reader.string();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.u32 = reader.uint32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            str: isSet(object.str) ? globalThis.String(object.str) : undefined,
            u32: isSet(object.u32) ? globalThis.Number(object.u32) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.str !== undefined) {
            obj.str = message.str;
        }
        if (message.u32 !== undefined) {
            obj.u32 = Math.round(message.u32);
        }
        return obj;
    },
    create(base) {
        return ListExampleTableRequest_IndexKey_StrU32.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseListExampleTableRequest_IndexKey_StrU32();
        message.str = (_a = object.str) !== null && _a !== void 0 ? _a : undefined;
        message.u32 = (_b = object.u32) !== null && _b !== void 0 ? _b : undefined;
        return message;
    },
};
function createBaseListExampleTableRequest_IndexKey_BzStr() {
    return { bz: undefined, str: undefined };
}
export const ListExampleTableRequest_IndexKey_BzStr = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.bz !== undefined) {
            writer.uint32(10).bytes(message.bz);
        }
        if (message.str !== undefined) {
            writer.uint32(18).string(message.str);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleTableRequest_IndexKey_BzStr();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.bz = reader.bytes();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.str = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            bz: isSet(object.bz) ? bytesFromBase64(object.bz) : undefined,
            str: isSet(object.str) ? globalThis.String(object.str) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.bz !== undefined) {
            obj.bz = base64FromBytes(message.bz);
        }
        if (message.str !== undefined) {
            obj.str = message.str;
        }
        return obj;
    },
    create(base) {
        return ListExampleTableRequest_IndexKey_BzStr.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseListExampleTableRequest_IndexKey_BzStr();
        message.bz = (_a = object.bz) !== null && _a !== void 0 ? _a : undefined;
        message.str = (_b = object.str) !== null && _b !== void 0 ? _b : undefined;
        return message;
    },
};
function createBaseListExampleTableRequest_RangeQuery() {
    return { from: undefined, to: undefined };
}
export const ListExampleTableRequest_RangeQuery = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.from !== undefined) {
            ListExampleTableRequest_IndexKey.encode(message.from, writer.uint32(10).fork()).ldelim();
        }
        if (message.to !== undefined) {
            ListExampleTableRequest_IndexKey.encode(message.to, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleTableRequest_RangeQuery();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.from = ListExampleTableRequest_IndexKey.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.to = ListExampleTableRequest_IndexKey.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            from: isSet(object.from) ? ListExampleTableRequest_IndexKey.fromJSON(object.from) : undefined,
            to: isSet(object.to) ? ListExampleTableRequest_IndexKey.fromJSON(object.to) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.from !== undefined) {
            obj.from = ListExampleTableRequest_IndexKey.toJSON(message.from);
        }
        if (message.to !== undefined) {
            obj.to = ListExampleTableRequest_IndexKey.toJSON(message.to);
        }
        return obj;
    },
    create(base) {
        return ListExampleTableRequest_RangeQuery.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseListExampleTableRequest_RangeQuery();
        message.from = (object.from !== undefined && object.from !== null)
            ? ListExampleTableRequest_IndexKey.fromPartial(object.from)
            : undefined;
        message.to = (object.to !== undefined && object.to !== null)
            ? ListExampleTableRequest_IndexKey.fromPartial(object.to)
            : undefined;
        return message;
    },
};
function createBaseListExampleTableResponse() {
    return { values: [], pagination: undefined };
}
export const ListExampleTableResponse = {
    encode(message, writer = _m0.Writer.create()) {
        for (const v of message.values) {
            ExampleTable.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== undefined) {
            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleTableResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.values.push(ExampleTable.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.pagination = PageResponse.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            values: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.values) ? object.values.map((e) => ExampleTable.fromJSON(e)) : [],
            pagination: isSet(object.pagination) ? PageResponse.fromJSON(object.pagination) : undefined,
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if ((_a = message.values) === null || _a === void 0 ? void 0 : _a.length) {
            obj.values = message.values.map((e) => ExampleTable.toJSON(e));
        }
        if (message.pagination !== undefined) {
            obj.pagination = PageResponse.toJSON(message.pagination);
        }
        return obj;
    },
    create(base) {
        return ListExampleTableResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseListExampleTableResponse();
        message.values = ((_a = object.values) === null || _a === void 0 ? void 0 : _a.map((e) => ExampleTable.fromPartial(e))) || [];
        message.pagination = (object.pagination !== undefined && object.pagination !== null)
            ? PageResponse.fromPartial(object.pagination)
            : undefined;
        return message;
    },
};
function createBaseGetExampleAutoIncrementTableRequest() {
    return { id: "0" };
}
export const GetExampleAutoIncrementTableRequest = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.id !== "0") {
            writer.uint32(8).uint64(message.id);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetExampleAutoIncrementTableRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.id = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { id: isSet(object.id) ? globalThis.String(object.id) : "0" };
    },
    toJSON(message) {
        const obj = {};
        if (message.id !== "0") {
            obj.id = message.id;
        }
        return obj;
    },
    create(base) {
        return GetExampleAutoIncrementTableRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseGetExampleAutoIncrementTableRequest();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : "0";
        return message;
    },
};
function createBaseGetExampleAutoIncrementTableResponse() {
    return { value: undefined };
}
export const GetExampleAutoIncrementTableResponse = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.value !== undefined) {
            ExampleAutoIncrementTable.encode(message.value, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetExampleAutoIncrementTableResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.value = ExampleAutoIncrementTable.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { value: isSet(object.value) ? ExampleAutoIncrementTable.fromJSON(object.value) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.value !== undefined) {
            obj.value = ExampleAutoIncrementTable.toJSON(message.value);
        }
        return obj;
    },
    create(base) {
        return GetExampleAutoIncrementTableResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseGetExampleAutoIncrementTableResponse();
        message.value = (object.value !== undefined && object.value !== null)
            ? ExampleAutoIncrementTable.fromPartial(object.value)
            : undefined;
        return message;
    },
};
function createBaseGetExampleAutoIncrementTableByXRequest() {
    return { x: "" };
}
export const GetExampleAutoIncrementTableByXRequest = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.x !== "") {
            writer.uint32(10).string(message.x);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetExampleAutoIncrementTableByXRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.x = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { x: isSet(object.x) ? globalThis.String(object.x) : "" };
    },
    toJSON(message) {
        const obj = {};
        if (message.x !== "") {
            obj.x = message.x;
        }
        return obj;
    },
    create(base) {
        return GetExampleAutoIncrementTableByXRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseGetExampleAutoIncrementTableByXRequest();
        message.x = (_a = object.x) !== null && _a !== void 0 ? _a : "";
        return message;
    },
};
function createBaseGetExampleAutoIncrementTableByXResponse() {
    return { value: undefined };
}
export const GetExampleAutoIncrementTableByXResponse = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.value !== undefined) {
            ExampleAutoIncrementTable.encode(message.value, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetExampleAutoIncrementTableByXResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.value = ExampleAutoIncrementTable.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { value: isSet(object.value) ? ExampleAutoIncrementTable.fromJSON(object.value) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.value !== undefined) {
            obj.value = ExampleAutoIncrementTable.toJSON(message.value);
        }
        return obj;
    },
    create(base) {
        return GetExampleAutoIncrementTableByXResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseGetExampleAutoIncrementTableByXResponse();
        message.value = (object.value !== undefined && object.value !== null)
            ? ExampleAutoIncrementTable.fromPartial(object.value)
            : undefined;
        return message;
    },
};
function createBaseListExampleAutoIncrementTableRequest() {
    return { prefixQuery: undefined, rangeQuery: undefined, pagination: undefined };
}
export const ListExampleAutoIncrementTableRequest = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.prefixQuery !== undefined) {
            ListExampleAutoIncrementTableRequest_IndexKey.encode(message.prefixQuery, writer.uint32(10).fork()).ldelim();
        }
        if (message.rangeQuery !== undefined) {
            ListExampleAutoIncrementTableRequest_RangeQuery.encode(message.rangeQuery, writer.uint32(18).fork()).ldelim();
        }
        if (message.pagination !== undefined) {
            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleAutoIncrementTableRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.prefixQuery = ListExampleAutoIncrementTableRequest_IndexKey.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.rangeQuery = ListExampleAutoIncrementTableRequest_RangeQuery.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.pagination = PageRequest.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            prefixQuery: isSet(object.prefixQuery)
                ? ListExampleAutoIncrementTableRequest_IndexKey.fromJSON(object.prefixQuery)
                : undefined,
            rangeQuery: isSet(object.rangeQuery)
                ? ListExampleAutoIncrementTableRequest_RangeQuery.fromJSON(object.rangeQuery)
                : undefined,
            pagination: isSet(object.pagination) ? PageRequest.fromJSON(object.pagination) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.prefixQuery !== undefined) {
            obj.prefixQuery = ListExampleAutoIncrementTableRequest_IndexKey.toJSON(message.prefixQuery);
        }
        if (message.rangeQuery !== undefined) {
            obj.rangeQuery = ListExampleAutoIncrementTableRequest_RangeQuery.toJSON(message.rangeQuery);
        }
        if (message.pagination !== undefined) {
            obj.pagination = PageRequest.toJSON(message.pagination);
        }
        return obj;
    },
    create(base) {
        return ListExampleAutoIncrementTableRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseListExampleAutoIncrementTableRequest();
        message.prefixQuery = (object.prefixQuery !== undefined && object.prefixQuery !== null)
            ? ListExampleAutoIncrementTableRequest_IndexKey.fromPartial(object.prefixQuery)
            : undefined;
        message.rangeQuery = (object.rangeQuery !== undefined && object.rangeQuery !== null)
            ? ListExampleAutoIncrementTableRequest_RangeQuery.fromPartial(object.rangeQuery)
            : undefined;
        message.pagination = (object.pagination !== undefined && object.pagination !== null)
            ? PageRequest.fromPartial(object.pagination)
            : undefined;
        return message;
    },
};
function createBaseListExampleAutoIncrementTableRequest_IndexKey() {
    return { id: undefined, x: undefined };
}
export const ListExampleAutoIncrementTableRequest_IndexKey = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.id !== undefined) {
            ListExampleAutoIncrementTableRequest_IndexKey_Id.encode(message.id, writer.uint32(10).fork()).ldelim();
        }
        if (message.x !== undefined) {
            ListExampleAutoIncrementTableRequest_IndexKey_X.encode(message.x, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleAutoIncrementTableRequest_IndexKey();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.id = ListExampleAutoIncrementTableRequest_IndexKey_Id.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.x = ListExampleAutoIncrementTableRequest_IndexKey_X.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            id: isSet(object.id) ? ListExampleAutoIncrementTableRequest_IndexKey_Id.fromJSON(object.id) : undefined,
            x: isSet(object.x) ? ListExampleAutoIncrementTableRequest_IndexKey_X.fromJSON(object.x) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.id !== undefined) {
            obj.id = ListExampleAutoIncrementTableRequest_IndexKey_Id.toJSON(message.id);
        }
        if (message.x !== undefined) {
            obj.x = ListExampleAutoIncrementTableRequest_IndexKey_X.toJSON(message.x);
        }
        return obj;
    },
    create(base) {
        return ListExampleAutoIncrementTableRequest_IndexKey.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseListExampleAutoIncrementTableRequest_IndexKey();
        message.id = (object.id !== undefined && object.id !== null)
            ? ListExampleAutoIncrementTableRequest_IndexKey_Id.fromPartial(object.id)
            : undefined;
        message.x = (object.x !== undefined && object.x !== null)
            ? ListExampleAutoIncrementTableRequest_IndexKey_X.fromPartial(object.x)
            : undefined;
        return message;
    },
};
function createBaseListExampleAutoIncrementTableRequest_IndexKey_Id() {
    return { id: undefined };
}
export const ListExampleAutoIncrementTableRequest_IndexKey_Id = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.id !== undefined) {
            writer.uint32(8).uint64(message.id);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleAutoIncrementTableRequest_IndexKey_Id();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.id = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { id: isSet(object.id) ? globalThis.String(object.id) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.id !== undefined) {
            obj.id = message.id;
        }
        return obj;
    },
    create(base) {
        return ListExampleAutoIncrementTableRequest_IndexKey_Id.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseListExampleAutoIncrementTableRequest_IndexKey_Id();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : undefined;
        return message;
    },
};
function createBaseListExampleAutoIncrementTableRequest_IndexKey_X() {
    return { x: undefined };
}
export const ListExampleAutoIncrementTableRequest_IndexKey_X = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.x !== undefined) {
            writer.uint32(10).string(message.x);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleAutoIncrementTableRequest_IndexKey_X();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.x = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { x: isSet(object.x) ? globalThis.String(object.x) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.x !== undefined) {
            obj.x = message.x;
        }
        return obj;
    },
    create(base) {
        return ListExampleAutoIncrementTableRequest_IndexKey_X.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseListExampleAutoIncrementTableRequest_IndexKey_X();
        message.x = (_a = object.x) !== null && _a !== void 0 ? _a : undefined;
        return message;
    },
};
function createBaseListExampleAutoIncrementTableRequest_RangeQuery() {
    return { from: undefined, to: undefined };
}
export const ListExampleAutoIncrementTableRequest_RangeQuery = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.from !== undefined) {
            ListExampleAutoIncrementTableRequest_IndexKey.encode(message.from, writer.uint32(10).fork()).ldelim();
        }
        if (message.to !== undefined) {
            ListExampleAutoIncrementTableRequest_IndexKey.encode(message.to, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleAutoIncrementTableRequest_RangeQuery();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.from = ListExampleAutoIncrementTableRequest_IndexKey.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.to = ListExampleAutoIncrementTableRequest_IndexKey.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            from: isSet(object.from) ? ListExampleAutoIncrementTableRequest_IndexKey.fromJSON(object.from) : undefined,
            to: isSet(object.to) ? ListExampleAutoIncrementTableRequest_IndexKey.fromJSON(object.to) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.from !== undefined) {
            obj.from = ListExampleAutoIncrementTableRequest_IndexKey.toJSON(message.from);
        }
        if (message.to !== undefined) {
            obj.to = ListExampleAutoIncrementTableRequest_IndexKey.toJSON(message.to);
        }
        return obj;
    },
    create(base) {
        return ListExampleAutoIncrementTableRequest_RangeQuery.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseListExampleAutoIncrementTableRequest_RangeQuery();
        message.from = (object.from !== undefined && object.from !== null)
            ? ListExampleAutoIncrementTableRequest_IndexKey.fromPartial(object.from)
            : undefined;
        message.to = (object.to !== undefined && object.to !== null)
            ? ListExampleAutoIncrementTableRequest_IndexKey.fromPartial(object.to)
            : undefined;
        return message;
    },
};
function createBaseListExampleAutoIncrementTableResponse() {
    return { values: [], pagination: undefined };
}
export const ListExampleAutoIncrementTableResponse = {
    encode(message, writer = _m0.Writer.create()) {
        for (const v of message.values) {
            ExampleAutoIncrementTable.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== undefined) {
            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleAutoIncrementTableResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.values.push(ExampleAutoIncrementTable.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.pagination = PageResponse.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            values: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.values)
                ? object.values.map((e) => ExampleAutoIncrementTable.fromJSON(e))
                : [],
            pagination: isSet(object.pagination) ? PageResponse.fromJSON(object.pagination) : undefined,
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if ((_a = message.values) === null || _a === void 0 ? void 0 : _a.length) {
            obj.values = message.values.map((e) => ExampleAutoIncrementTable.toJSON(e));
        }
        if (message.pagination !== undefined) {
            obj.pagination = PageResponse.toJSON(message.pagination);
        }
        return obj;
    },
    create(base) {
        return ListExampleAutoIncrementTableResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseListExampleAutoIncrementTableResponse();
        message.values = ((_a = object.values) === null || _a === void 0 ? void 0 : _a.map((e) => ExampleAutoIncrementTable.fromPartial(e))) || [];
        message.pagination = (object.pagination !== undefined && object.pagination !== null)
            ? PageResponse.fromPartial(object.pagination)
            : undefined;
        return message;
    },
};
function createBaseGetExampleSingletonRequest() {
    return {};
}
export const GetExampleSingletonRequest = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetExampleSingletonRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return GetExampleSingletonRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(_) {
        const message = createBaseGetExampleSingletonRequest();
        return message;
    },
};
function createBaseGetExampleSingletonResponse() {
    return { value: undefined };
}
export const GetExampleSingletonResponse = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.value !== undefined) {
            ExampleSingleton.encode(message.value, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetExampleSingletonResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.value = ExampleSingleton.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { value: isSet(object.value) ? ExampleSingleton.fromJSON(object.value) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.value !== undefined) {
            obj.value = ExampleSingleton.toJSON(message.value);
        }
        return obj;
    },
    create(base) {
        return GetExampleSingletonResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseGetExampleSingletonResponse();
        message.value = (object.value !== undefined && object.value !== null)
            ? ExampleSingleton.fromPartial(object.value)
            : undefined;
        return message;
    },
};
function createBaseGetExampleTimestampRequest() {
    return { id: "0" };
}
export const GetExampleTimestampRequest = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.id !== "0") {
            writer.uint32(8).uint64(message.id);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetExampleTimestampRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.id = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { id: isSet(object.id) ? globalThis.String(object.id) : "0" };
    },
    toJSON(message) {
        const obj = {};
        if (message.id !== "0") {
            obj.id = message.id;
        }
        return obj;
    },
    create(base) {
        return GetExampleTimestampRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseGetExampleTimestampRequest();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : "0";
        return message;
    },
};
function createBaseGetExampleTimestampResponse() {
    return { value: undefined };
}
export const GetExampleTimestampResponse = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.value !== undefined) {
            ExampleTimestamp.encode(message.value, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetExampleTimestampResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.value = ExampleTimestamp.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { value: isSet(object.value) ? ExampleTimestamp.fromJSON(object.value) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.value !== undefined) {
            obj.value = ExampleTimestamp.toJSON(message.value);
        }
        return obj;
    },
    create(base) {
        return GetExampleTimestampResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseGetExampleTimestampResponse();
        message.value = (object.value !== undefined && object.value !== null)
            ? ExampleTimestamp.fromPartial(object.value)
            : undefined;
        return message;
    },
};
function createBaseListExampleTimestampRequest() {
    return { prefixQuery: undefined, rangeQuery: undefined, pagination: undefined };
}
export const ListExampleTimestampRequest = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.prefixQuery !== undefined) {
            ListExampleTimestampRequest_IndexKey.encode(message.prefixQuery, writer.uint32(10).fork()).ldelim();
        }
        if (message.rangeQuery !== undefined) {
            ListExampleTimestampRequest_RangeQuery.encode(message.rangeQuery, writer.uint32(18).fork()).ldelim();
        }
        if (message.pagination !== undefined) {
            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleTimestampRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.prefixQuery = ListExampleTimestampRequest_IndexKey.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.rangeQuery = ListExampleTimestampRequest_RangeQuery.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.pagination = PageRequest.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            prefixQuery: isSet(object.prefixQuery)
                ? ListExampleTimestampRequest_IndexKey.fromJSON(object.prefixQuery)
                : undefined,
            rangeQuery: isSet(object.rangeQuery)
                ? ListExampleTimestampRequest_RangeQuery.fromJSON(object.rangeQuery)
                : undefined,
            pagination: isSet(object.pagination) ? PageRequest.fromJSON(object.pagination) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.prefixQuery !== undefined) {
            obj.prefixQuery = ListExampleTimestampRequest_IndexKey.toJSON(message.prefixQuery);
        }
        if (message.rangeQuery !== undefined) {
            obj.rangeQuery = ListExampleTimestampRequest_RangeQuery.toJSON(message.rangeQuery);
        }
        if (message.pagination !== undefined) {
            obj.pagination = PageRequest.toJSON(message.pagination);
        }
        return obj;
    },
    create(base) {
        return ListExampleTimestampRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseListExampleTimestampRequest();
        message.prefixQuery = (object.prefixQuery !== undefined && object.prefixQuery !== null)
            ? ListExampleTimestampRequest_IndexKey.fromPartial(object.prefixQuery)
            : undefined;
        message.rangeQuery = (object.rangeQuery !== undefined && object.rangeQuery !== null)
            ? ListExampleTimestampRequest_RangeQuery.fromPartial(object.rangeQuery)
            : undefined;
        message.pagination = (object.pagination !== undefined && object.pagination !== null)
            ? PageRequest.fromPartial(object.pagination)
            : undefined;
        return message;
    },
};
function createBaseListExampleTimestampRequest_IndexKey() {
    return { id: undefined, ts: undefined };
}
export const ListExampleTimestampRequest_IndexKey = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.id !== undefined) {
            ListExampleTimestampRequest_IndexKey_Id.encode(message.id, writer.uint32(10).fork()).ldelim();
        }
        if (message.ts !== undefined) {
            ListExampleTimestampRequest_IndexKey_Ts.encode(message.ts, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleTimestampRequest_IndexKey();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.id = ListExampleTimestampRequest_IndexKey_Id.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.ts = ListExampleTimestampRequest_IndexKey_Ts.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            id: isSet(object.id) ? ListExampleTimestampRequest_IndexKey_Id.fromJSON(object.id) : undefined,
            ts: isSet(object.ts) ? ListExampleTimestampRequest_IndexKey_Ts.fromJSON(object.ts) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.id !== undefined) {
            obj.id = ListExampleTimestampRequest_IndexKey_Id.toJSON(message.id);
        }
        if (message.ts !== undefined) {
            obj.ts = ListExampleTimestampRequest_IndexKey_Ts.toJSON(message.ts);
        }
        return obj;
    },
    create(base) {
        return ListExampleTimestampRequest_IndexKey.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseListExampleTimestampRequest_IndexKey();
        message.id = (object.id !== undefined && object.id !== null)
            ? ListExampleTimestampRequest_IndexKey_Id.fromPartial(object.id)
            : undefined;
        message.ts = (object.ts !== undefined && object.ts !== null)
            ? ListExampleTimestampRequest_IndexKey_Ts.fromPartial(object.ts)
            : undefined;
        return message;
    },
};
function createBaseListExampleTimestampRequest_IndexKey_Id() {
    return { id: undefined };
}
export const ListExampleTimestampRequest_IndexKey_Id = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.id !== undefined) {
            writer.uint32(8).uint64(message.id);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleTimestampRequest_IndexKey_Id();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.id = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { id: isSet(object.id) ? globalThis.String(object.id) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.id !== undefined) {
            obj.id = message.id;
        }
        return obj;
    },
    create(base) {
        return ListExampleTimestampRequest_IndexKey_Id.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseListExampleTimestampRequest_IndexKey_Id();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : undefined;
        return message;
    },
};
function createBaseListExampleTimestampRequest_IndexKey_Ts() {
    return { ts: undefined };
}
export const ListExampleTimestampRequest_IndexKey_Ts = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.ts !== undefined) {
            Timestamp.encode(toTimestamp(message.ts), writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleTimestampRequest_IndexKey_Ts();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.ts = fromTimestamp(Timestamp.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { ts: isSet(object.ts) ? fromJsonTimestamp(object.ts) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.ts !== undefined) {
            obj.ts = message.ts.toISOString();
        }
        return obj;
    },
    create(base) {
        return ListExampleTimestampRequest_IndexKey_Ts.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseListExampleTimestampRequest_IndexKey_Ts();
        message.ts = (_a = object.ts) !== null && _a !== void 0 ? _a : undefined;
        return message;
    },
};
function createBaseListExampleTimestampRequest_RangeQuery() {
    return { from: undefined, to: undefined };
}
export const ListExampleTimestampRequest_RangeQuery = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.from !== undefined) {
            ListExampleTimestampRequest_IndexKey.encode(message.from, writer.uint32(10).fork()).ldelim();
        }
        if (message.to !== undefined) {
            ListExampleTimestampRequest_IndexKey.encode(message.to, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleTimestampRequest_RangeQuery();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.from = ListExampleTimestampRequest_IndexKey.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.to = ListExampleTimestampRequest_IndexKey.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            from: isSet(object.from) ? ListExampleTimestampRequest_IndexKey.fromJSON(object.from) : undefined,
            to: isSet(object.to) ? ListExampleTimestampRequest_IndexKey.fromJSON(object.to) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.from !== undefined) {
            obj.from = ListExampleTimestampRequest_IndexKey.toJSON(message.from);
        }
        if (message.to !== undefined) {
            obj.to = ListExampleTimestampRequest_IndexKey.toJSON(message.to);
        }
        return obj;
    },
    create(base) {
        return ListExampleTimestampRequest_RangeQuery.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseListExampleTimestampRequest_RangeQuery();
        message.from = (object.from !== undefined && object.from !== null)
            ? ListExampleTimestampRequest_IndexKey.fromPartial(object.from)
            : undefined;
        message.to = (object.to !== undefined && object.to !== null)
            ? ListExampleTimestampRequest_IndexKey.fromPartial(object.to)
            : undefined;
        return message;
    },
};
function createBaseListExampleTimestampResponse() {
    return { values: [], pagination: undefined };
}
export const ListExampleTimestampResponse = {
    encode(message, writer = _m0.Writer.create()) {
        for (const v of message.values) {
            ExampleTimestamp.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== undefined) {
            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleTimestampResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.values.push(ExampleTimestamp.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.pagination = PageResponse.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            values: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.values)
                ? object.values.map((e) => ExampleTimestamp.fromJSON(e))
                : [],
            pagination: isSet(object.pagination) ? PageResponse.fromJSON(object.pagination) : undefined,
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if ((_a = message.values) === null || _a === void 0 ? void 0 : _a.length) {
            obj.values = message.values.map((e) => ExampleTimestamp.toJSON(e));
        }
        if (message.pagination !== undefined) {
            obj.pagination = PageResponse.toJSON(message.pagination);
        }
        return obj;
    },
    create(base) {
        return ListExampleTimestampResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseListExampleTimestampResponse();
        message.values = ((_a = object.values) === null || _a === void 0 ? void 0 : _a.map((e) => ExampleTimestamp.fromPartial(e))) || [];
        message.pagination = (object.pagination !== undefined && object.pagination !== null)
            ? PageResponse.fromPartial(object.pagination)
            : undefined;
        return message;
    },
};
function createBaseGetSimpleExampleRequest() {
    return { name: "" };
}
export const GetSimpleExampleRequest = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetSimpleExampleRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.name = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { name: isSet(object.name) ? globalThis.String(object.name) : "" };
    },
    toJSON(message) {
        const obj = {};
        if (message.name !== "") {
            obj.name = message.name;
        }
        return obj;
    },
    create(base) {
        return GetSimpleExampleRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseGetSimpleExampleRequest();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        return message;
    },
};
function createBaseGetSimpleExampleResponse() {
    return { value: undefined };
}
export const GetSimpleExampleResponse = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.value !== undefined) {
            SimpleExample.encode(message.value, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetSimpleExampleResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.value = SimpleExample.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { value: isSet(object.value) ? SimpleExample.fromJSON(object.value) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.value !== undefined) {
            obj.value = SimpleExample.toJSON(message.value);
        }
        return obj;
    },
    create(base) {
        return GetSimpleExampleResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseGetSimpleExampleResponse();
        message.value = (object.value !== undefined && object.value !== null)
            ? SimpleExample.fromPartial(object.value)
            : undefined;
        return message;
    },
};
function createBaseGetSimpleExampleByUniqueRequest() {
    return { unique: "" };
}
export const GetSimpleExampleByUniqueRequest = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.unique !== "") {
            writer.uint32(10).string(message.unique);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetSimpleExampleByUniqueRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.unique = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { unique: isSet(object.unique) ? globalThis.String(object.unique) : "" };
    },
    toJSON(message) {
        const obj = {};
        if (message.unique !== "") {
            obj.unique = message.unique;
        }
        return obj;
    },
    create(base) {
        return GetSimpleExampleByUniqueRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseGetSimpleExampleByUniqueRequest();
        message.unique = (_a = object.unique) !== null && _a !== void 0 ? _a : "";
        return message;
    },
};
function createBaseGetSimpleExampleByUniqueResponse() {
    return { value: undefined };
}
export const GetSimpleExampleByUniqueResponse = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.value !== undefined) {
            SimpleExample.encode(message.value, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetSimpleExampleByUniqueResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.value = SimpleExample.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { value: isSet(object.value) ? SimpleExample.fromJSON(object.value) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.value !== undefined) {
            obj.value = SimpleExample.toJSON(message.value);
        }
        return obj;
    },
    create(base) {
        return GetSimpleExampleByUniqueResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseGetSimpleExampleByUniqueResponse();
        message.value = (object.value !== undefined && object.value !== null)
            ? SimpleExample.fromPartial(object.value)
            : undefined;
        return message;
    },
};
function createBaseListSimpleExampleRequest() {
    return { prefixQuery: undefined, rangeQuery: undefined, pagination: undefined };
}
export const ListSimpleExampleRequest = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.prefixQuery !== undefined) {
            ListSimpleExampleRequest_IndexKey.encode(message.prefixQuery, writer.uint32(10).fork()).ldelim();
        }
        if (message.rangeQuery !== undefined) {
            ListSimpleExampleRequest_RangeQuery.encode(message.rangeQuery, writer.uint32(18).fork()).ldelim();
        }
        if (message.pagination !== undefined) {
            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListSimpleExampleRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.prefixQuery = ListSimpleExampleRequest_IndexKey.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.rangeQuery = ListSimpleExampleRequest_RangeQuery.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.pagination = PageRequest.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            prefixQuery: isSet(object.prefixQuery)
                ? ListSimpleExampleRequest_IndexKey.fromJSON(object.prefixQuery)
                : undefined,
            rangeQuery: isSet(object.rangeQuery)
                ? ListSimpleExampleRequest_RangeQuery.fromJSON(object.rangeQuery)
                : undefined,
            pagination: isSet(object.pagination) ? PageRequest.fromJSON(object.pagination) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.prefixQuery !== undefined) {
            obj.prefixQuery = ListSimpleExampleRequest_IndexKey.toJSON(message.prefixQuery);
        }
        if (message.rangeQuery !== undefined) {
            obj.rangeQuery = ListSimpleExampleRequest_RangeQuery.toJSON(message.rangeQuery);
        }
        if (message.pagination !== undefined) {
            obj.pagination = PageRequest.toJSON(message.pagination);
        }
        return obj;
    },
    create(base) {
        return ListSimpleExampleRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseListSimpleExampleRequest();
        message.prefixQuery = (object.prefixQuery !== undefined && object.prefixQuery !== null)
            ? ListSimpleExampleRequest_IndexKey.fromPartial(object.prefixQuery)
            : undefined;
        message.rangeQuery = (object.rangeQuery !== undefined && object.rangeQuery !== null)
            ? ListSimpleExampleRequest_RangeQuery.fromPartial(object.rangeQuery)
            : undefined;
        message.pagination = (object.pagination !== undefined && object.pagination !== null)
            ? PageRequest.fromPartial(object.pagination)
            : undefined;
        return message;
    },
};
function createBaseListSimpleExampleRequest_IndexKey() {
    return { name: undefined, unique: undefined };
}
export const ListSimpleExampleRequest_IndexKey = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.name !== undefined) {
            ListSimpleExampleRequest_IndexKey_Name.encode(message.name, writer.uint32(10).fork()).ldelim();
        }
        if (message.unique !== undefined) {
            ListSimpleExampleRequest_IndexKey_Unique.encode(message.unique, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListSimpleExampleRequest_IndexKey();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.name = ListSimpleExampleRequest_IndexKey_Name.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.unique = ListSimpleExampleRequest_IndexKey_Unique.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            name: isSet(object.name) ? ListSimpleExampleRequest_IndexKey_Name.fromJSON(object.name) : undefined,
            unique: isSet(object.unique) ? ListSimpleExampleRequest_IndexKey_Unique.fromJSON(object.unique) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.name !== undefined) {
            obj.name = ListSimpleExampleRequest_IndexKey_Name.toJSON(message.name);
        }
        if (message.unique !== undefined) {
            obj.unique = ListSimpleExampleRequest_IndexKey_Unique.toJSON(message.unique);
        }
        return obj;
    },
    create(base) {
        return ListSimpleExampleRequest_IndexKey.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseListSimpleExampleRequest_IndexKey();
        message.name = (object.name !== undefined && object.name !== null)
            ? ListSimpleExampleRequest_IndexKey_Name.fromPartial(object.name)
            : undefined;
        message.unique = (object.unique !== undefined && object.unique !== null)
            ? ListSimpleExampleRequest_IndexKey_Unique.fromPartial(object.unique)
            : undefined;
        return message;
    },
};
function createBaseListSimpleExampleRequest_IndexKey_Name() {
    return { name: undefined };
}
export const ListSimpleExampleRequest_IndexKey_Name = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.name !== undefined) {
            writer.uint32(10).string(message.name);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListSimpleExampleRequest_IndexKey_Name();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.name = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { name: isSet(object.name) ? globalThis.String(object.name) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.name !== undefined) {
            obj.name = message.name;
        }
        return obj;
    },
    create(base) {
        return ListSimpleExampleRequest_IndexKey_Name.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseListSimpleExampleRequest_IndexKey_Name();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : undefined;
        return message;
    },
};
function createBaseListSimpleExampleRequest_IndexKey_Unique() {
    return { unique: undefined };
}
export const ListSimpleExampleRequest_IndexKey_Unique = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.unique !== undefined) {
            writer.uint32(10).string(message.unique);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListSimpleExampleRequest_IndexKey_Unique();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.unique = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { unique: isSet(object.unique) ? globalThis.String(object.unique) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.unique !== undefined) {
            obj.unique = message.unique;
        }
        return obj;
    },
    create(base) {
        return ListSimpleExampleRequest_IndexKey_Unique.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseListSimpleExampleRequest_IndexKey_Unique();
        message.unique = (_a = object.unique) !== null && _a !== void 0 ? _a : undefined;
        return message;
    },
};
function createBaseListSimpleExampleRequest_RangeQuery() {
    return { from: undefined, to: undefined };
}
export const ListSimpleExampleRequest_RangeQuery = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.from !== undefined) {
            ListSimpleExampleRequest_IndexKey.encode(message.from, writer.uint32(10).fork()).ldelim();
        }
        if (message.to !== undefined) {
            ListSimpleExampleRequest_IndexKey.encode(message.to, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListSimpleExampleRequest_RangeQuery();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.from = ListSimpleExampleRequest_IndexKey.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.to = ListSimpleExampleRequest_IndexKey.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            from: isSet(object.from) ? ListSimpleExampleRequest_IndexKey.fromJSON(object.from) : undefined,
            to: isSet(object.to) ? ListSimpleExampleRequest_IndexKey.fromJSON(object.to) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.from !== undefined) {
            obj.from = ListSimpleExampleRequest_IndexKey.toJSON(message.from);
        }
        if (message.to !== undefined) {
            obj.to = ListSimpleExampleRequest_IndexKey.toJSON(message.to);
        }
        return obj;
    },
    create(base) {
        return ListSimpleExampleRequest_RangeQuery.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseListSimpleExampleRequest_RangeQuery();
        message.from = (object.from !== undefined && object.from !== null)
            ? ListSimpleExampleRequest_IndexKey.fromPartial(object.from)
            : undefined;
        message.to = (object.to !== undefined && object.to !== null)
            ? ListSimpleExampleRequest_IndexKey.fromPartial(object.to)
            : undefined;
        return message;
    },
};
function createBaseListSimpleExampleResponse() {
    return { values: [], pagination: undefined };
}
export const ListSimpleExampleResponse = {
    encode(message, writer = _m0.Writer.create()) {
        for (const v of message.values) {
            SimpleExample.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== undefined) {
            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListSimpleExampleResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.values.push(SimpleExample.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.pagination = PageResponse.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            values: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.values) ? object.values.map((e) => SimpleExample.fromJSON(e)) : [],
            pagination: isSet(object.pagination) ? PageResponse.fromJSON(object.pagination) : undefined,
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if ((_a = message.values) === null || _a === void 0 ? void 0 : _a.length) {
            obj.values = message.values.map((e) => SimpleExample.toJSON(e));
        }
        if (message.pagination !== undefined) {
            obj.pagination = PageResponse.toJSON(message.pagination);
        }
        return obj;
    },
    create(base) {
        return ListSimpleExampleResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseListSimpleExampleResponse();
        message.values = ((_a = object.values) === null || _a === void 0 ? void 0 : _a.map((e) => SimpleExample.fromPartial(e))) || [];
        message.pagination = (object.pagination !== undefined && object.pagination !== null)
            ? PageResponse.fromPartial(object.pagination)
            : undefined;
        return message;
    },
};
function createBaseGetExampleAutoIncFieldNameRequest() {
    return { foo: "0" };
}
export const GetExampleAutoIncFieldNameRequest = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.foo !== "0") {
            writer.uint32(8).uint64(message.foo);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetExampleAutoIncFieldNameRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.foo = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { foo: isSet(object.foo) ? globalThis.String(object.foo) : "0" };
    },
    toJSON(message) {
        const obj = {};
        if (message.foo !== "0") {
            obj.foo = message.foo;
        }
        return obj;
    },
    create(base) {
        return GetExampleAutoIncFieldNameRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseGetExampleAutoIncFieldNameRequest();
        message.foo = (_a = object.foo) !== null && _a !== void 0 ? _a : "0";
        return message;
    },
};
function createBaseGetExampleAutoIncFieldNameResponse() {
    return { value: undefined };
}
export const GetExampleAutoIncFieldNameResponse = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.value !== undefined) {
            ExampleAutoIncFieldName.encode(message.value, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetExampleAutoIncFieldNameResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.value = ExampleAutoIncFieldName.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { value: isSet(object.value) ? ExampleAutoIncFieldName.fromJSON(object.value) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.value !== undefined) {
            obj.value = ExampleAutoIncFieldName.toJSON(message.value);
        }
        return obj;
    },
    create(base) {
        return GetExampleAutoIncFieldNameResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseGetExampleAutoIncFieldNameResponse();
        message.value = (object.value !== undefined && object.value !== null)
            ? ExampleAutoIncFieldName.fromPartial(object.value)
            : undefined;
        return message;
    },
};
function createBaseListExampleAutoIncFieldNameRequest() {
    return { prefixQuery: undefined, rangeQuery: undefined, pagination: undefined };
}
export const ListExampleAutoIncFieldNameRequest = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.prefixQuery !== undefined) {
            ListExampleAutoIncFieldNameRequest_IndexKey.encode(message.prefixQuery, writer.uint32(10).fork()).ldelim();
        }
        if (message.rangeQuery !== undefined) {
            ListExampleAutoIncFieldNameRequest_RangeQuery.encode(message.rangeQuery, writer.uint32(18).fork()).ldelim();
        }
        if (message.pagination !== undefined) {
            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleAutoIncFieldNameRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.prefixQuery = ListExampleAutoIncFieldNameRequest_IndexKey.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.rangeQuery = ListExampleAutoIncFieldNameRequest_RangeQuery.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.pagination = PageRequest.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            prefixQuery: isSet(object.prefixQuery)
                ? ListExampleAutoIncFieldNameRequest_IndexKey.fromJSON(object.prefixQuery)
                : undefined,
            rangeQuery: isSet(object.rangeQuery)
                ? ListExampleAutoIncFieldNameRequest_RangeQuery.fromJSON(object.rangeQuery)
                : undefined,
            pagination: isSet(object.pagination) ? PageRequest.fromJSON(object.pagination) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.prefixQuery !== undefined) {
            obj.prefixQuery = ListExampleAutoIncFieldNameRequest_IndexKey.toJSON(message.prefixQuery);
        }
        if (message.rangeQuery !== undefined) {
            obj.rangeQuery = ListExampleAutoIncFieldNameRequest_RangeQuery.toJSON(message.rangeQuery);
        }
        if (message.pagination !== undefined) {
            obj.pagination = PageRequest.toJSON(message.pagination);
        }
        return obj;
    },
    create(base) {
        return ListExampleAutoIncFieldNameRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseListExampleAutoIncFieldNameRequest();
        message.prefixQuery = (object.prefixQuery !== undefined && object.prefixQuery !== null)
            ? ListExampleAutoIncFieldNameRequest_IndexKey.fromPartial(object.prefixQuery)
            : undefined;
        message.rangeQuery = (object.rangeQuery !== undefined && object.rangeQuery !== null)
            ? ListExampleAutoIncFieldNameRequest_RangeQuery.fromPartial(object.rangeQuery)
            : undefined;
        message.pagination = (object.pagination !== undefined && object.pagination !== null)
            ? PageRequest.fromPartial(object.pagination)
            : undefined;
        return message;
    },
};
function createBaseListExampleAutoIncFieldNameRequest_IndexKey() {
    return { foo: undefined };
}
export const ListExampleAutoIncFieldNameRequest_IndexKey = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.foo !== undefined) {
            ListExampleAutoIncFieldNameRequest_IndexKey_Foo.encode(message.foo, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleAutoIncFieldNameRequest_IndexKey();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.foo = ListExampleAutoIncFieldNameRequest_IndexKey_Foo.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            foo: isSet(object.foo) ? ListExampleAutoIncFieldNameRequest_IndexKey_Foo.fromJSON(object.foo) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.foo !== undefined) {
            obj.foo = ListExampleAutoIncFieldNameRequest_IndexKey_Foo.toJSON(message.foo);
        }
        return obj;
    },
    create(base) {
        return ListExampleAutoIncFieldNameRequest_IndexKey.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseListExampleAutoIncFieldNameRequest_IndexKey();
        message.foo = (object.foo !== undefined && object.foo !== null)
            ? ListExampleAutoIncFieldNameRequest_IndexKey_Foo.fromPartial(object.foo)
            : undefined;
        return message;
    },
};
function createBaseListExampleAutoIncFieldNameRequest_IndexKey_Foo() {
    return { foo: undefined };
}
export const ListExampleAutoIncFieldNameRequest_IndexKey_Foo = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.foo !== undefined) {
            writer.uint32(8).uint64(message.foo);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleAutoIncFieldNameRequest_IndexKey_Foo();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.foo = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { foo: isSet(object.foo) ? globalThis.String(object.foo) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.foo !== undefined) {
            obj.foo = message.foo;
        }
        return obj;
    },
    create(base) {
        return ListExampleAutoIncFieldNameRequest_IndexKey_Foo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseListExampleAutoIncFieldNameRequest_IndexKey_Foo();
        message.foo = (_a = object.foo) !== null && _a !== void 0 ? _a : undefined;
        return message;
    },
};
function createBaseListExampleAutoIncFieldNameRequest_RangeQuery() {
    return { from: undefined, to: undefined };
}
export const ListExampleAutoIncFieldNameRequest_RangeQuery = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.from !== undefined) {
            ListExampleAutoIncFieldNameRequest_IndexKey.encode(message.from, writer.uint32(10).fork()).ldelim();
        }
        if (message.to !== undefined) {
            ListExampleAutoIncFieldNameRequest_IndexKey.encode(message.to, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleAutoIncFieldNameRequest_RangeQuery();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.from = ListExampleAutoIncFieldNameRequest_IndexKey.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.to = ListExampleAutoIncFieldNameRequest_IndexKey.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            from: isSet(object.from) ? ListExampleAutoIncFieldNameRequest_IndexKey.fromJSON(object.from) : undefined,
            to: isSet(object.to) ? ListExampleAutoIncFieldNameRequest_IndexKey.fromJSON(object.to) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.from !== undefined) {
            obj.from = ListExampleAutoIncFieldNameRequest_IndexKey.toJSON(message.from);
        }
        if (message.to !== undefined) {
            obj.to = ListExampleAutoIncFieldNameRequest_IndexKey.toJSON(message.to);
        }
        return obj;
    },
    create(base) {
        return ListExampleAutoIncFieldNameRequest_RangeQuery.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseListExampleAutoIncFieldNameRequest_RangeQuery();
        message.from = (object.from !== undefined && object.from !== null)
            ? ListExampleAutoIncFieldNameRequest_IndexKey.fromPartial(object.from)
            : undefined;
        message.to = (object.to !== undefined && object.to !== null)
            ? ListExampleAutoIncFieldNameRequest_IndexKey.fromPartial(object.to)
            : undefined;
        return message;
    },
};
function createBaseListExampleAutoIncFieldNameResponse() {
    return { values: [], pagination: undefined };
}
export const ListExampleAutoIncFieldNameResponse = {
    encode(message, writer = _m0.Writer.create()) {
        for (const v of message.values) {
            ExampleAutoIncFieldName.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== undefined) {
            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseListExampleAutoIncFieldNameResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.values.push(ExampleAutoIncFieldName.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.pagination = PageResponse.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            values: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.values)
                ? object.values.map((e) => ExampleAutoIncFieldName.fromJSON(e))
                : [],
            pagination: isSet(object.pagination) ? PageResponse.fromJSON(object.pagination) : undefined,
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if ((_a = message.values) === null || _a === void 0 ? void 0 : _a.length) {
            obj.values = message.values.map((e) => ExampleAutoIncFieldName.toJSON(e));
        }
        if (message.pagination !== undefined) {
            obj.pagination = PageResponse.toJSON(message.pagination);
        }
        return obj;
    },
    create(base) {
        return ListExampleAutoIncFieldNameResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseListExampleAutoIncFieldNameResponse();
        message.values = ((_a = object.values) === null || _a === void 0 ? void 0 : _a.map((e) => ExampleAutoIncFieldName.fromPartial(e))) || [];
        message.pagination = (object.pagination !== undefined && object.pagination !== null)
            ? PageResponse.fromPartial(object.pagination)
            : undefined;
        return message;
    },
};
export class TestSchemaQueryServiceClientImpl {
    constructor(rpc) {
        this.rpc = rpc;
        this.GetExampleTable = this.GetExampleTable.bind(this);
        this.GetExampleTableByU64Str = this.GetExampleTableByU64Str.bind(this);
        this.ListExampleTable = this.ListExampleTable.bind(this);
        this.GetExampleAutoIncrementTable = this.GetExampleAutoIncrementTable.bind(this);
        this.GetExampleAutoIncrementTableByX = this.GetExampleAutoIncrementTableByX.bind(this);
        this.ListExampleAutoIncrementTable = this.ListExampleAutoIncrementTable.bind(this);
        this.GetExampleSingleton = this.GetExampleSingleton.bind(this);
        this.GetExampleTimestamp = this.GetExampleTimestamp.bind(this);
        this.ListExampleTimestamp = this.ListExampleTimestamp.bind(this);
        this.GetSimpleExample = this.GetSimpleExample.bind(this);
        this.GetSimpleExampleByUnique = this.GetSimpleExampleByUnique.bind(this);
        this.ListSimpleExample = this.ListSimpleExample.bind(this);
        this.GetExampleAutoIncFieldName = this.GetExampleAutoIncFieldName.bind(this);
        this.ListExampleAutoIncFieldName = this.ListExampleAutoIncFieldName.bind(this);
    }
    GetExampleTable(request, metadata) {
        return this.rpc.unary(TestSchemaQueryServiceGetExampleTableDesc, GetExampleTableRequest.fromPartial(request), metadata);
    }
    GetExampleTableByU64Str(request, metadata) {
        return this.rpc.unary(TestSchemaQueryServiceGetExampleTableByU64StrDesc, GetExampleTableByU64StrRequest.fromPartial(request), metadata);
    }
    ListExampleTable(request, metadata) {
        return this.rpc.unary(TestSchemaQueryServiceListExampleTableDesc, ListExampleTableRequest.fromPartial(request), metadata);
    }
    GetExampleAutoIncrementTable(request, metadata) {
        return this.rpc.unary(TestSchemaQueryServiceGetExampleAutoIncrementTableDesc, GetExampleAutoIncrementTableRequest.fromPartial(request), metadata);
    }
    GetExampleAutoIncrementTableByX(request, metadata) {
        return this.rpc.unary(TestSchemaQueryServiceGetExampleAutoIncrementTableByXDesc, GetExampleAutoIncrementTableByXRequest.fromPartial(request), metadata);
    }
    ListExampleAutoIncrementTable(request, metadata) {
        return this.rpc.unary(TestSchemaQueryServiceListExampleAutoIncrementTableDesc, ListExampleAutoIncrementTableRequest.fromPartial(request), metadata);
    }
    GetExampleSingleton(request, metadata) {
        return this.rpc.unary(TestSchemaQueryServiceGetExampleSingletonDesc, GetExampleSingletonRequest.fromPartial(request), metadata);
    }
    GetExampleTimestamp(request, metadata) {
        return this.rpc.unary(TestSchemaQueryServiceGetExampleTimestampDesc, GetExampleTimestampRequest.fromPartial(request), metadata);
    }
    ListExampleTimestamp(request, metadata) {
        return this.rpc.unary(TestSchemaQueryServiceListExampleTimestampDesc, ListExampleTimestampRequest.fromPartial(request), metadata);
    }
    GetSimpleExample(request, metadata) {
        return this.rpc.unary(TestSchemaQueryServiceGetSimpleExampleDesc, GetSimpleExampleRequest.fromPartial(request), metadata);
    }
    GetSimpleExampleByUnique(request, metadata) {
        return this.rpc.unary(TestSchemaQueryServiceGetSimpleExampleByUniqueDesc, GetSimpleExampleByUniqueRequest.fromPartial(request), metadata);
    }
    ListSimpleExample(request, metadata) {
        return this.rpc.unary(TestSchemaQueryServiceListSimpleExampleDesc, ListSimpleExampleRequest.fromPartial(request), metadata);
    }
    GetExampleAutoIncFieldName(request, metadata) {
        return this.rpc.unary(TestSchemaQueryServiceGetExampleAutoIncFieldNameDesc, GetExampleAutoIncFieldNameRequest.fromPartial(request), metadata);
    }
    ListExampleAutoIncFieldName(request, metadata) {
        return this.rpc.unary(TestSchemaQueryServiceListExampleAutoIncFieldNameDesc, ListExampleAutoIncFieldNameRequest.fromPartial(request), metadata);
    }
}
export const TestSchemaQueryServiceDesc = { serviceName: "testpb.TestSchemaQueryService" };
export const TestSchemaQueryServiceGetExampleTableDesc = {
    methodName: "GetExampleTable",
    service: TestSchemaQueryServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return GetExampleTableRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = GetExampleTableResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
export const TestSchemaQueryServiceGetExampleTableByU64StrDesc = {
    methodName: "GetExampleTableByU64Str",
    service: TestSchemaQueryServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return GetExampleTableByU64StrRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = GetExampleTableByU64StrResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
export const TestSchemaQueryServiceListExampleTableDesc = {
    methodName: "ListExampleTable",
    service: TestSchemaQueryServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return ListExampleTableRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = ListExampleTableResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
export const TestSchemaQueryServiceGetExampleAutoIncrementTableDesc = {
    methodName: "GetExampleAutoIncrementTable",
    service: TestSchemaQueryServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return GetExampleAutoIncrementTableRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = GetExampleAutoIncrementTableResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
export const TestSchemaQueryServiceGetExampleAutoIncrementTableByXDesc = {
    methodName: "GetExampleAutoIncrementTableByX",
    service: TestSchemaQueryServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return GetExampleAutoIncrementTableByXRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = GetExampleAutoIncrementTableByXResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
export const TestSchemaQueryServiceListExampleAutoIncrementTableDesc = {
    methodName: "ListExampleAutoIncrementTable",
    service: TestSchemaQueryServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return ListExampleAutoIncrementTableRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = ListExampleAutoIncrementTableResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
export const TestSchemaQueryServiceGetExampleSingletonDesc = {
    methodName: "GetExampleSingleton",
    service: TestSchemaQueryServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return GetExampleSingletonRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = GetExampleSingletonResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
export const TestSchemaQueryServiceGetExampleTimestampDesc = {
    methodName: "GetExampleTimestamp",
    service: TestSchemaQueryServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return GetExampleTimestampRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = GetExampleTimestampResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
export const TestSchemaQueryServiceListExampleTimestampDesc = {
    methodName: "ListExampleTimestamp",
    service: TestSchemaQueryServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return ListExampleTimestampRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = ListExampleTimestampResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
export const TestSchemaQueryServiceGetSimpleExampleDesc = {
    methodName: "GetSimpleExample",
    service: TestSchemaQueryServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return GetSimpleExampleRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = GetSimpleExampleResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
export const TestSchemaQueryServiceGetSimpleExampleByUniqueDesc = {
    methodName: "GetSimpleExampleByUnique",
    service: TestSchemaQueryServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return GetSimpleExampleByUniqueRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = GetSimpleExampleByUniqueResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
export const TestSchemaQueryServiceListSimpleExampleDesc = {
    methodName: "ListSimpleExample",
    service: TestSchemaQueryServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return ListSimpleExampleRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = ListSimpleExampleResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
export const TestSchemaQueryServiceGetExampleAutoIncFieldNameDesc = {
    methodName: "GetExampleAutoIncFieldName",
    service: TestSchemaQueryServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return GetExampleAutoIncFieldNameRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = GetExampleAutoIncFieldNameResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
export const TestSchemaQueryServiceListExampleAutoIncFieldNameDesc = {
    methodName: "ListExampleAutoIncFieldName",
    service: TestSchemaQueryServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return ListExampleAutoIncFieldNameRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = ListExampleAutoIncFieldNameResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
export class GrpcWebImpl {
    constructor(host, options) {
        this.host = host;
        this.options = options;
    }
    unary(methodDesc, _request, metadata) {
        var _a;
        const request = Object.assign(Object.assign({}, _request), methodDesc.requestType);
        const maybeCombinedMetadata = metadata && this.options.metadata
            ? new BrowserHeaders(Object.assign(Object.assign({}, (_a = this.options) === null || _a === void 0 ? void 0 : _a.metadata.headersMap), metadata === null || metadata === void 0 ? void 0 : metadata.headersMap))
            : metadata !== null && metadata !== void 0 ? metadata : this.options.metadata;
        return new Promise((resolve, reject) => {
            var _a;
            grpc.unary(methodDesc, Object.assign(Object.assign({ request, host: this.host, metadata: maybeCombinedMetadata !== null && maybeCombinedMetadata !== void 0 ? maybeCombinedMetadata : {} }, (this.options.transport !== undefined ? { transport: this.options.transport } : {})), { debug: (_a = this.options.debug) !== null && _a !== void 0 ? _a : false, onEnd: function (response) {
                    if (response.status === grpc.Code.OK) {
                        resolve(response.message.toObject());
                    }
                    else {
                        const err = new GrpcWebError(response.statusMessage, response.status, response.trailers);
                        reject(err);
                    }
                } }));
        });
    }
}
function bytesFromBase64(b64) {
    if (globalThis.Buffer) {
        return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
    }
    else {
        const bin = globalThis.atob(b64);
        const arr = new Uint8Array(bin.length);
        for (let i = 0; i < bin.length; ++i) {
            arr[i] = bin.charCodeAt(i);
        }
        return arr;
    }
}
function base64FromBytes(arr) {
    if (globalThis.Buffer) {
        return globalThis.Buffer.from(arr).toString("base64");
    }
    else {
        const bin = [];
        arr.forEach((byte) => {
            bin.push(globalThis.String.fromCharCode(byte));
        });
        return globalThis.btoa(bin.join(""));
    }
}
function toTimestamp(date) {
    const seconds = Math.trunc(date.getTime() / 1000).toString();
    const nanos = (date.getTime() % 1000) * 1000000;
    return { seconds, nanos };
}
function fromTimestamp(t) {
    let millis = (globalThis.Number(t.seconds) || 0) * 1000;
    millis += (t.nanos || 0) / 1000000;
    return new globalThis.Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof globalThis.Date) {
        return o;
    }
    else if (typeof o === "string") {
        return new globalThis.Date(o);
    }
    else {
        return fromTimestamp(Timestamp.fromJSON(o));
    }
}
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== Long) {
    _m0.util.Long = Long;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
export class GrpcWebError extends globalThis.Error {
    constructor(message, code, metadata) {
        super(message);
        this.code = code;
        this.metadata = metadata;
    }
}
