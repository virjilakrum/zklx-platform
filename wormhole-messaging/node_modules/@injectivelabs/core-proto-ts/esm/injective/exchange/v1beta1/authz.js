/* eslint-disable */
import _m0 from "protobufjs/minimal";
function createBaseCreateSpotLimitOrderAuthz() {
    return { subaccountId: "", marketIds: [] };
}
export const CreateSpotLimitOrderAuthz = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.subaccountId !== "") {
            writer.uint32(10).string(message.subaccountId);
        }
        for (const v of message.marketIds) {
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCreateSpotLimitOrderAuthz();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.subaccountId = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.marketIds.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            subaccountId: isSet(object.subaccountId) ? globalThis.String(object.subaccountId) : "",
            marketIds: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds)
                ? object.marketIds.map((e) => globalThis.String(e))
                : [],
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if (message.subaccountId !== "") {
            obj.subaccountId = message.subaccountId;
        }
        if ((_a = message.marketIds) === null || _a === void 0 ? void 0 : _a.length) {
            obj.marketIds = message.marketIds;
        }
        return obj;
    },
    create(base) {
        return CreateSpotLimitOrderAuthz.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseCreateSpotLimitOrderAuthz();
        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : "";
        message.marketIds = ((_b = object.marketIds) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];
        return message;
    },
};
function createBaseCreateSpotMarketOrderAuthz() {
    return { subaccountId: "", marketIds: [] };
}
export const CreateSpotMarketOrderAuthz = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.subaccountId !== "") {
            writer.uint32(10).string(message.subaccountId);
        }
        for (const v of message.marketIds) {
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCreateSpotMarketOrderAuthz();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.subaccountId = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.marketIds.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            subaccountId: isSet(object.subaccountId) ? globalThis.String(object.subaccountId) : "",
            marketIds: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds)
                ? object.marketIds.map((e) => globalThis.String(e))
                : [],
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if (message.subaccountId !== "") {
            obj.subaccountId = message.subaccountId;
        }
        if ((_a = message.marketIds) === null || _a === void 0 ? void 0 : _a.length) {
            obj.marketIds = message.marketIds;
        }
        return obj;
    },
    create(base) {
        return CreateSpotMarketOrderAuthz.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseCreateSpotMarketOrderAuthz();
        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : "";
        message.marketIds = ((_b = object.marketIds) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];
        return message;
    },
};
function createBaseBatchCreateSpotLimitOrdersAuthz() {
    return { subaccountId: "", marketIds: [] };
}
export const BatchCreateSpotLimitOrdersAuthz = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.subaccountId !== "") {
            writer.uint32(10).string(message.subaccountId);
        }
        for (const v of message.marketIds) {
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBatchCreateSpotLimitOrdersAuthz();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.subaccountId = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.marketIds.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            subaccountId: isSet(object.subaccountId) ? globalThis.String(object.subaccountId) : "",
            marketIds: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds)
                ? object.marketIds.map((e) => globalThis.String(e))
                : [],
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if (message.subaccountId !== "") {
            obj.subaccountId = message.subaccountId;
        }
        if ((_a = message.marketIds) === null || _a === void 0 ? void 0 : _a.length) {
            obj.marketIds = message.marketIds;
        }
        return obj;
    },
    create(base) {
        return BatchCreateSpotLimitOrdersAuthz.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseBatchCreateSpotLimitOrdersAuthz();
        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : "";
        message.marketIds = ((_b = object.marketIds) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];
        return message;
    },
};
function createBaseCancelSpotOrderAuthz() {
    return { subaccountId: "", marketIds: [] };
}
export const CancelSpotOrderAuthz = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.subaccountId !== "") {
            writer.uint32(10).string(message.subaccountId);
        }
        for (const v of message.marketIds) {
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCancelSpotOrderAuthz();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.subaccountId = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.marketIds.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            subaccountId: isSet(object.subaccountId) ? globalThis.String(object.subaccountId) : "",
            marketIds: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds)
                ? object.marketIds.map((e) => globalThis.String(e))
                : [],
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if (message.subaccountId !== "") {
            obj.subaccountId = message.subaccountId;
        }
        if ((_a = message.marketIds) === null || _a === void 0 ? void 0 : _a.length) {
            obj.marketIds = message.marketIds;
        }
        return obj;
    },
    create(base) {
        return CancelSpotOrderAuthz.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseCancelSpotOrderAuthz();
        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : "";
        message.marketIds = ((_b = object.marketIds) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];
        return message;
    },
};
function createBaseBatchCancelSpotOrdersAuthz() {
    return { subaccountId: "", marketIds: [] };
}
export const BatchCancelSpotOrdersAuthz = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.subaccountId !== "") {
            writer.uint32(10).string(message.subaccountId);
        }
        for (const v of message.marketIds) {
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBatchCancelSpotOrdersAuthz();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.subaccountId = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.marketIds.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            subaccountId: isSet(object.subaccountId) ? globalThis.String(object.subaccountId) : "",
            marketIds: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds)
                ? object.marketIds.map((e) => globalThis.String(e))
                : [],
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if (message.subaccountId !== "") {
            obj.subaccountId = message.subaccountId;
        }
        if ((_a = message.marketIds) === null || _a === void 0 ? void 0 : _a.length) {
            obj.marketIds = message.marketIds;
        }
        return obj;
    },
    create(base) {
        return BatchCancelSpotOrdersAuthz.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseBatchCancelSpotOrdersAuthz();
        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : "";
        message.marketIds = ((_b = object.marketIds) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];
        return message;
    },
};
function createBaseCreateDerivativeLimitOrderAuthz() {
    return { subaccountId: "", marketIds: [] };
}
export const CreateDerivativeLimitOrderAuthz = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.subaccountId !== "") {
            writer.uint32(10).string(message.subaccountId);
        }
        for (const v of message.marketIds) {
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCreateDerivativeLimitOrderAuthz();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.subaccountId = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.marketIds.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            subaccountId: isSet(object.subaccountId) ? globalThis.String(object.subaccountId) : "",
            marketIds: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds)
                ? object.marketIds.map((e) => globalThis.String(e))
                : [],
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if (message.subaccountId !== "") {
            obj.subaccountId = message.subaccountId;
        }
        if ((_a = message.marketIds) === null || _a === void 0 ? void 0 : _a.length) {
            obj.marketIds = message.marketIds;
        }
        return obj;
    },
    create(base) {
        return CreateDerivativeLimitOrderAuthz.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseCreateDerivativeLimitOrderAuthz();
        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : "";
        message.marketIds = ((_b = object.marketIds) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];
        return message;
    },
};
function createBaseCreateDerivativeMarketOrderAuthz() {
    return { subaccountId: "", marketIds: [] };
}
export const CreateDerivativeMarketOrderAuthz = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.subaccountId !== "") {
            writer.uint32(10).string(message.subaccountId);
        }
        for (const v of message.marketIds) {
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCreateDerivativeMarketOrderAuthz();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.subaccountId = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.marketIds.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            subaccountId: isSet(object.subaccountId) ? globalThis.String(object.subaccountId) : "",
            marketIds: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds)
                ? object.marketIds.map((e) => globalThis.String(e))
                : [],
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if (message.subaccountId !== "") {
            obj.subaccountId = message.subaccountId;
        }
        if ((_a = message.marketIds) === null || _a === void 0 ? void 0 : _a.length) {
            obj.marketIds = message.marketIds;
        }
        return obj;
    },
    create(base) {
        return CreateDerivativeMarketOrderAuthz.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseCreateDerivativeMarketOrderAuthz();
        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : "";
        message.marketIds = ((_b = object.marketIds) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];
        return message;
    },
};
function createBaseBatchCreateDerivativeLimitOrdersAuthz() {
    return { subaccountId: "", marketIds: [] };
}
export const BatchCreateDerivativeLimitOrdersAuthz = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.subaccountId !== "") {
            writer.uint32(10).string(message.subaccountId);
        }
        for (const v of message.marketIds) {
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBatchCreateDerivativeLimitOrdersAuthz();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.subaccountId = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.marketIds.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            subaccountId: isSet(object.subaccountId) ? globalThis.String(object.subaccountId) : "",
            marketIds: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds)
                ? object.marketIds.map((e) => globalThis.String(e))
                : [],
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if (message.subaccountId !== "") {
            obj.subaccountId = message.subaccountId;
        }
        if ((_a = message.marketIds) === null || _a === void 0 ? void 0 : _a.length) {
            obj.marketIds = message.marketIds;
        }
        return obj;
    },
    create(base) {
        return BatchCreateDerivativeLimitOrdersAuthz.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseBatchCreateDerivativeLimitOrdersAuthz();
        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : "";
        message.marketIds = ((_b = object.marketIds) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];
        return message;
    },
};
function createBaseCancelDerivativeOrderAuthz() {
    return { subaccountId: "", marketIds: [] };
}
export const CancelDerivativeOrderAuthz = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.subaccountId !== "") {
            writer.uint32(10).string(message.subaccountId);
        }
        for (const v of message.marketIds) {
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCancelDerivativeOrderAuthz();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.subaccountId = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.marketIds.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            subaccountId: isSet(object.subaccountId) ? globalThis.String(object.subaccountId) : "",
            marketIds: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds)
                ? object.marketIds.map((e) => globalThis.String(e))
                : [],
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if (message.subaccountId !== "") {
            obj.subaccountId = message.subaccountId;
        }
        if ((_a = message.marketIds) === null || _a === void 0 ? void 0 : _a.length) {
            obj.marketIds = message.marketIds;
        }
        return obj;
    },
    create(base) {
        return CancelDerivativeOrderAuthz.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseCancelDerivativeOrderAuthz();
        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : "";
        message.marketIds = ((_b = object.marketIds) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];
        return message;
    },
};
function createBaseBatchCancelDerivativeOrdersAuthz() {
    return { subaccountId: "", marketIds: [] };
}
export const BatchCancelDerivativeOrdersAuthz = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.subaccountId !== "") {
            writer.uint32(10).string(message.subaccountId);
        }
        for (const v of message.marketIds) {
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBatchCancelDerivativeOrdersAuthz();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.subaccountId = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.marketIds.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            subaccountId: isSet(object.subaccountId) ? globalThis.String(object.subaccountId) : "",
            marketIds: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds)
                ? object.marketIds.map((e) => globalThis.String(e))
                : [],
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if (message.subaccountId !== "") {
            obj.subaccountId = message.subaccountId;
        }
        if ((_a = message.marketIds) === null || _a === void 0 ? void 0 : _a.length) {
            obj.marketIds = message.marketIds;
        }
        return obj;
    },
    create(base) {
        return BatchCancelDerivativeOrdersAuthz.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseBatchCancelDerivativeOrdersAuthz();
        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : "";
        message.marketIds = ((_b = object.marketIds) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];
        return message;
    },
};
function createBaseBatchUpdateOrdersAuthz() {
    return { subaccountId: "", spotMarkets: [], derivativeMarkets: [] };
}
export const BatchUpdateOrdersAuthz = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.subaccountId !== "") {
            writer.uint32(10).string(message.subaccountId);
        }
        for (const v of message.spotMarkets) {
            writer.uint32(18).string(v);
        }
        for (const v of message.derivativeMarkets) {
            writer.uint32(26).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBatchUpdateOrdersAuthz();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.subaccountId = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.spotMarkets.push(reader.string());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.derivativeMarkets.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            subaccountId: isSet(object.subaccountId) ? globalThis.String(object.subaccountId) : "",
            spotMarkets: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.spotMarkets)
                ? object.spotMarkets.map((e) => globalThis.String(e))
                : [],
            derivativeMarkets: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.derivativeMarkets)
                ? object.derivativeMarkets.map((e) => globalThis.String(e))
                : [],
        };
    },
    toJSON(message) {
        var _a, _b;
        const obj = {};
        if (message.subaccountId !== "") {
            obj.subaccountId = message.subaccountId;
        }
        if ((_a = message.spotMarkets) === null || _a === void 0 ? void 0 : _a.length) {
            obj.spotMarkets = message.spotMarkets;
        }
        if ((_b = message.derivativeMarkets) === null || _b === void 0 ? void 0 : _b.length) {
            obj.derivativeMarkets = message.derivativeMarkets;
        }
        return obj;
    },
    create(base) {
        return BatchUpdateOrdersAuthz.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b, _c;
        const message = createBaseBatchUpdateOrdersAuthz();
        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : "";
        message.spotMarkets = ((_b = object.spotMarkets) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];
        message.derivativeMarkets = ((_c = object.derivativeMarkets) === null || _c === void 0 ? void 0 : _c.map((e) => e)) || [];
        return message;
    },
};
function isSet(value) {
    return value !== null && value !== undefined;
}
