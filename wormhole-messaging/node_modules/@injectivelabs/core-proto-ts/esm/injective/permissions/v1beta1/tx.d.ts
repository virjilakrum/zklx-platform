import { grpc } from "@injectivelabs/grpc-web";
import _m0 from "protobufjs/minimal";
import { Params } from "./params";
import { Namespace, Roles } from "./permissions";
export interface MsgUpdateParams {
    /** authority is the address of the governance account. */
    authority: string;
    /**
     * params defines the permissions parameters to update.
     *
     * NOTE: All parameters must be supplied.
     */
    params: Params | undefined;
}
export interface MsgUpdateParamsResponse {
}
export interface MsgCreateNamespace {
    sender: string;
    namespace: Namespace | undefined;
}
export interface MsgCreateNamespaceResponse {
}
export interface MsgDeleteNamespace {
    sender: string;
    namespaceDenom: string;
}
export interface MsgDeleteNamespaceResponse {
}
export interface MsgUpdateNamespace {
    sender: string;
    /** namespace denom to which this updates are applied */
    namespaceDenom: string;
    /** address of smart contract to apply code-based restrictions */
    wasmHook: MsgUpdateNamespace_MsgSetWasmHook | undefined;
    mintsPaused: MsgUpdateNamespace_MsgSetMintsPaused | undefined;
    sendsPaused: MsgUpdateNamespace_MsgSetSendsPaused | undefined;
    burnsPaused: MsgUpdateNamespace_MsgSetBurnsPaused | undefined;
}
export interface MsgUpdateNamespace_MsgSetWasmHook {
    newValue: string;
}
export interface MsgUpdateNamespace_MsgSetMintsPaused {
    newValue: boolean;
}
export interface MsgUpdateNamespace_MsgSetSendsPaused {
    newValue: boolean;
}
export interface MsgUpdateNamespace_MsgSetBurnsPaused {
    newValue: boolean;
}
export interface MsgUpdateNamespaceResponse {
}
export interface MsgUpdateNamespaceRoles {
    sender: string;
    /** namespace denom to which this updates are applied */
    namespaceDenom: string;
    /** new role definitions or updated permissions for existing roles */
    rolePermissions: {
        [key: string]: number;
    };
    /** new addresses to add or new roles for existing addresses to */
    addressRoles: {
        [key: string]: Roles;
    };
}
export interface MsgUpdateNamespaceRoles_RolePermissionsEntry {
    key: string;
    value: number;
}
export interface MsgUpdateNamespaceRoles_AddressRolesEntry {
    key: string;
    value: Roles | undefined;
}
export interface MsgUpdateNamespaceRolesResponse {
}
export interface MsgRevokeNamespaceRoles {
    sender: string;
    /** namespace denom to which this updates are applied */
    namespaceDenom: string;
    /** map of {"address" => array of roles to revoke from this address} */
    addressRolesToRevoke: {
        [key: string]: Roles;
    };
}
export interface MsgRevokeNamespaceRoles_AddressRolesToRevokeEntry {
    key: string;
    value: Roles | undefined;
}
export interface MsgRevokeNamespaceRolesResponse {
}
export interface MsgClaimVoucher {
    sender: string;
    /** address of the original voucher sender (typically a module address, */
    originator: string;
}
export interface MsgClaimVoucherResponse {
}
export declare const MsgUpdateParams: {
    encode(message: MsgUpdateParams, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParams;
    fromJSON(object: any): MsgUpdateParams;
    toJSON(message: MsgUpdateParams): unknown;
    create(base?: DeepPartial<MsgUpdateParams>): MsgUpdateParams;
    fromPartial(object: DeepPartial<MsgUpdateParams>): MsgUpdateParams;
};
export declare const MsgUpdateParamsResponse: {
    encode(_: MsgUpdateParamsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParamsResponse;
    fromJSON(_: any): MsgUpdateParamsResponse;
    toJSON(_: MsgUpdateParamsResponse): unknown;
    create(base?: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse;
    fromPartial(_: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse;
};
export declare const MsgCreateNamespace: {
    encode(message: MsgCreateNamespace, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgCreateNamespace;
    fromJSON(object: any): MsgCreateNamespace;
    toJSON(message: MsgCreateNamespace): unknown;
    create(base?: DeepPartial<MsgCreateNamespace>): MsgCreateNamespace;
    fromPartial(object: DeepPartial<MsgCreateNamespace>): MsgCreateNamespace;
};
export declare const MsgCreateNamespaceResponse: {
    encode(_: MsgCreateNamespaceResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgCreateNamespaceResponse;
    fromJSON(_: any): MsgCreateNamespaceResponse;
    toJSON(_: MsgCreateNamespaceResponse): unknown;
    create(base?: DeepPartial<MsgCreateNamespaceResponse>): MsgCreateNamespaceResponse;
    fromPartial(_: DeepPartial<MsgCreateNamespaceResponse>): MsgCreateNamespaceResponse;
};
export declare const MsgDeleteNamespace: {
    encode(message: MsgDeleteNamespace, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgDeleteNamespace;
    fromJSON(object: any): MsgDeleteNamespace;
    toJSON(message: MsgDeleteNamespace): unknown;
    create(base?: DeepPartial<MsgDeleteNamespace>): MsgDeleteNamespace;
    fromPartial(object: DeepPartial<MsgDeleteNamespace>): MsgDeleteNamespace;
};
export declare const MsgDeleteNamespaceResponse: {
    encode(_: MsgDeleteNamespaceResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgDeleteNamespaceResponse;
    fromJSON(_: any): MsgDeleteNamespaceResponse;
    toJSON(_: MsgDeleteNamespaceResponse): unknown;
    create(base?: DeepPartial<MsgDeleteNamespaceResponse>): MsgDeleteNamespaceResponse;
    fromPartial(_: DeepPartial<MsgDeleteNamespaceResponse>): MsgDeleteNamespaceResponse;
};
export declare const MsgUpdateNamespace: {
    encode(message: MsgUpdateNamespace, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateNamespace;
    fromJSON(object: any): MsgUpdateNamespace;
    toJSON(message: MsgUpdateNamespace): unknown;
    create(base?: DeepPartial<MsgUpdateNamespace>): MsgUpdateNamespace;
    fromPartial(object: DeepPartial<MsgUpdateNamespace>): MsgUpdateNamespace;
};
export declare const MsgUpdateNamespace_MsgSetWasmHook: {
    encode(message: MsgUpdateNamespace_MsgSetWasmHook, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateNamespace_MsgSetWasmHook;
    fromJSON(object: any): MsgUpdateNamespace_MsgSetWasmHook;
    toJSON(message: MsgUpdateNamespace_MsgSetWasmHook): unknown;
    create(base?: DeepPartial<MsgUpdateNamespace_MsgSetWasmHook>): MsgUpdateNamespace_MsgSetWasmHook;
    fromPartial(object: DeepPartial<MsgUpdateNamespace_MsgSetWasmHook>): MsgUpdateNamespace_MsgSetWasmHook;
};
export declare const MsgUpdateNamespace_MsgSetMintsPaused: {
    encode(message: MsgUpdateNamespace_MsgSetMintsPaused, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateNamespace_MsgSetMintsPaused;
    fromJSON(object: any): MsgUpdateNamespace_MsgSetMintsPaused;
    toJSON(message: MsgUpdateNamespace_MsgSetMintsPaused): unknown;
    create(base?: DeepPartial<MsgUpdateNamespace_MsgSetMintsPaused>): MsgUpdateNamespace_MsgSetMintsPaused;
    fromPartial(object: DeepPartial<MsgUpdateNamespace_MsgSetMintsPaused>): MsgUpdateNamespace_MsgSetMintsPaused;
};
export declare const MsgUpdateNamespace_MsgSetSendsPaused: {
    encode(message: MsgUpdateNamespace_MsgSetSendsPaused, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateNamespace_MsgSetSendsPaused;
    fromJSON(object: any): MsgUpdateNamespace_MsgSetSendsPaused;
    toJSON(message: MsgUpdateNamespace_MsgSetSendsPaused): unknown;
    create(base?: DeepPartial<MsgUpdateNamespace_MsgSetSendsPaused>): MsgUpdateNamespace_MsgSetSendsPaused;
    fromPartial(object: DeepPartial<MsgUpdateNamespace_MsgSetSendsPaused>): MsgUpdateNamespace_MsgSetSendsPaused;
};
export declare const MsgUpdateNamespace_MsgSetBurnsPaused: {
    encode(message: MsgUpdateNamespace_MsgSetBurnsPaused, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateNamespace_MsgSetBurnsPaused;
    fromJSON(object: any): MsgUpdateNamespace_MsgSetBurnsPaused;
    toJSON(message: MsgUpdateNamespace_MsgSetBurnsPaused): unknown;
    create(base?: DeepPartial<MsgUpdateNamespace_MsgSetBurnsPaused>): MsgUpdateNamespace_MsgSetBurnsPaused;
    fromPartial(object: DeepPartial<MsgUpdateNamespace_MsgSetBurnsPaused>): MsgUpdateNamespace_MsgSetBurnsPaused;
};
export declare const MsgUpdateNamespaceResponse: {
    encode(_: MsgUpdateNamespaceResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateNamespaceResponse;
    fromJSON(_: any): MsgUpdateNamespaceResponse;
    toJSON(_: MsgUpdateNamespaceResponse): unknown;
    create(base?: DeepPartial<MsgUpdateNamespaceResponse>): MsgUpdateNamespaceResponse;
    fromPartial(_: DeepPartial<MsgUpdateNamespaceResponse>): MsgUpdateNamespaceResponse;
};
export declare const MsgUpdateNamespaceRoles: {
    encode(message: MsgUpdateNamespaceRoles, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateNamespaceRoles;
    fromJSON(object: any): MsgUpdateNamespaceRoles;
    toJSON(message: MsgUpdateNamespaceRoles): unknown;
    create(base?: DeepPartial<MsgUpdateNamespaceRoles>): MsgUpdateNamespaceRoles;
    fromPartial(object: DeepPartial<MsgUpdateNamespaceRoles>): MsgUpdateNamespaceRoles;
};
export declare const MsgUpdateNamespaceRoles_RolePermissionsEntry: {
    encode(message: MsgUpdateNamespaceRoles_RolePermissionsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateNamespaceRoles_RolePermissionsEntry;
    fromJSON(object: any): MsgUpdateNamespaceRoles_RolePermissionsEntry;
    toJSON(message: MsgUpdateNamespaceRoles_RolePermissionsEntry): unknown;
    create(base?: DeepPartial<MsgUpdateNamespaceRoles_RolePermissionsEntry>): MsgUpdateNamespaceRoles_RolePermissionsEntry;
    fromPartial(object: DeepPartial<MsgUpdateNamespaceRoles_RolePermissionsEntry>): MsgUpdateNamespaceRoles_RolePermissionsEntry;
};
export declare const MsgUpdateNamespaceRoles_AddressRolesEntry: {
    encode(message: MsgUpdateNamespaceRoles_AddressRolesEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateNamespaceRoles_AddressRolesEntry;
    fromJSON(object: any): MsgUpdateNamespaceRoles_AddressRolesEntry;
    toJSON(message: MsgUpdateNamespaceRoles_AddressRolesEntry): unknown;
    create(base?: DeepPartial<MsgUpdateNamespaceRoles_AddressRolesEntry>): MsgUpdateNamespaceRoles_AddressRolesEntry;
    fromPartial(object: DeepPartial<MsgUpdateNamespaceRoles_AddressRolesEntry>): MsgUpdateNamespaceRoles_AddressRolesEntry;
};
export declare const MsgUpdateNamespaceRolesResponse: {
    encode(_: MsgUpdateNamespaceRolesResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateNamespaceRolesResponse;
    fromJSON(_: any): MsgUpdateNamespaceRolesResponse;
    toJSON(_: MsgUpdateNamespaceRolesResponse): unknown;
    create(base?: DeepPartial<MsgUpdateNamespaceRolesResponse>): MsgUpdateNamespaceRolesResponse;
    fromPartial(_: DeepPartial<MsgUpdateNamespaceRolesResponse>): MsgUpdateNamespaceRolesResponse;
};
export declare const MsgRevokeNamespaceRoles: {
    encode(message: MsgRevokeNamespaceRoles, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgRevokeNamespaceRoles;
    fromJSON(object: any): MsgRevokeNamespaceRoles;
    toJSON(message: MsgRevokeNamespaceRoles): unknown;
    create(base?: DeepPartial<MsgRevokeNamespaceRoles>): MsgRevokeNamespaceRoles;
    fromPartial(object: DeepPartial<MsgRevokeNamespaceRoles>): MsgRevokeNamespaceRoles;
};
export declare const MsgRevokeNamespaceRoles_AddressRolesToRevokeEntry: {
    encode(message: MsgRevokeNamespaceRoles_AddressRolesToRevokeEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgRevokeNamespaceRoles_AddressRolesToRevokeEntry;
    fromJSON(object: any): MsgRevokeNamespaceRoles_AddressRolesToRevokeEntry;
    toJSON(message: MsgRevokeNamespaceRoles_AddressRolesToRevokeEntry): unknown;
    create(base?: DeepPartial<MsgRevokeNamespaceRoles_AddressRolesToRevokeEntry>): MsgRevokeNamespaceRoles_AddressRolesToRevokeEntry;
    fromPartial(object: DeepPartial<MsgRevokeNamespaceRoles_AddressRolesToRevokeEntry>): MsgRevokeNamespaceRoles_AddressRolesToRevokeEntry;
};
export declare const MsgRevokeNamespaceRolesResponse: {
    encode(_: MsgRevokeNamespaceRolesResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgRevokeNamespaceRolesResponse;
    fromJSON(_: any): MsgRevokeNamespaceRolesResponse;
    toJSON(_: MsgRevokeNamespaceRolesResponse): unknown;
    create(base?: DeepPartial<MsgRevokeNamespaceRolesResponse>): MsgRevokeNamespaceRolesResponse;
    fromPartial(_: DeepPartial<MsgRevokeNamespaceRolesResponse>): MsgRevokeNamespaceRolesResponse;
};
export declare const MsgClaimVoucher: {
    encode(message: MsgClaimVoucher, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgClaimVoucher;
    fromJSON(object: any): MsgClaimVoucher;
    toJSON(message: MsgClaimVoucher): unknown;
    create(base?: DeepPartial<MsgClaimVoucher>): MsgClaimVoucher;
    fromPartial(object: DeepPartial<MsgClaimVoucher>): MsgClaimVoucher;
};
export declare const MsgClaimVoucherResponse: {
    encode(_: MsgClaimVoucherResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgClaimVoucherResponse;
    fromJSON(_: any): MsgClaimVoucherResponse;
    toJSON(_: MsgClaimVoucherResponse): unknown;
    create(base?: DeepPartial<MsgClaimVoucherResponse>): MsgClaimVoucherResponse;
    fromPartial(_: DeepPartial<MsgClaimVoucherResponse>): MsgClaimVoucherResponse;
};
/** Msg defines the permissions module's gRPC message service. */
export interface Msg {
    UpdateParams(request: DeepPartial<MsgUpdateParams>, metadata?: grpc.Metadata): Promise<MsgUpdateParamsResponse>;
    CreateNamespace(request: DeepPartial<MsgCreateNamespace>, metadata?: grpc.Metadata): Promise<MsgCreateNamespaceResponse>;
    DeleteNamespace(request: DeepPartial<MsgDeleteNamespace>, metadata?: grpc.Metadata): Promise<MsgDeleteNamespaceResponse>;
    UpdateNamespace(request: DeepPartial<MsgUpdateNamespace>, metadata?: grpc.Metadata): Promise<MsgUpdateNamespaceResponse>;
    UpdateNamespaceRoles(request: DeepPartial<MsgUpdateNamespaceRoles>, metadata?: grpc.Metadata): Promise<MsgUpdateNamespaceRolesResponse>;
    RevokeNamespaceRoles(request: DeepPartial<MsgRevokeNamespaceRoles>, metadata?: grpc.Metadata): Promise<MsgRevokeNamespaceRolesResponse>;
    ClaimVoucher(request: DeepPartial<MsgClaimVoucher>, metadata?: grpc.Metadata): Promise<MsgClaimVoucherResponse>;
}
export declare class MsgClientImpl implements Msg {
    private readonly rpc;
    constructor(rpc: Rpc);
    UpdateParams(request: DeepPartial<MsgUpdateParams>, metadata?: grpc.Metadata): Promise<MsgUpdateParamsResponse>;
    CreateNamespace(request: DeepPartial<MsgCreateNamespace>, metadata?: grpc.Metadata): Promise<MsgCreateNamespaceResponse>;
    DeleteNamespace(request: DeepPartial<MsgDeleteNamespace>, metadata?: grpc.Metadata): Promise<MsgDeleteNamespaceResponse>;
    UpdateNamespace(request: DeepPartial<MsgUpdateNamespace>, metadata?: grpc.Metadata): Promise<MsgUpdateNamespaceResponse>;
    UpdateNamespaceRoles(request: DeepPartial<MsgUpdateNamespaceRoles>, metadata?: grpc.Metadata): Promise<MsgUpdateNamespaceRolesResponse>;
    RevokeNamespaceRoles(request: DeepPartial<MsgRevokeNamespaceRoles>, metadata?: grpc.Metadata): Promise<MsgRevokeNamespaceRolesResponse>;
    ClaimVoucher(request: DeepPartial<MsgClaimVoucher>, metadata?: grpc.Metadata): Promise<MsgClaimVoucherResponse>;
}
export declare const MsgDesc: {
    serviceName: string;
};
export declare const MsgUpdateParamsDesc: UnaryMethodDefinitionish;
export declare const MsgCreateNamespaceDesc: UnaryMethodDefinitionish;
export declare const MsgDeleteNamespaceDesc: UnaryMethodDefinitionish;
export declare const MsgUpdateNamespaceDesc: UnaryMethodDefinitionish;
export declare const MsgUpdateNamespaceRolesDesc: UnaryMethodDefinitionish;
export declare const MsgRevokeNamespaceRolesDesc: UnaryMethodDefinitionish;
export declare const MsgClaimVoucherDesc: UnaryMethodDefinitionish;
interface UnaryMethodDefinitionishR extends grpc.UnaryMethodDefinition<any, any> {
    requestStream: any;
    responseStream: any;
}
type UnaryMethodDefinitionish = UnaryMethodDefinitionishR;
interface Rpc {
    unary<T extends UnaryMethodDefinitionish>(methodDesc: T, request: any, metadata: grpc.Metadata | undefined): Promise<any>;
}
export declare class GrpcWebImpl {
    private host;
    private options;
    constructor(host: string, options: {
        transport?: grpc.TransportFactory;
        debug?: boolean;
        metadata?: grpc.Metadata;
        upStreamRetryCodes?: number[];
    });
    unary<T extends UnaryMethodDefinitionish>(methodDesc: T, _request: any, metadata: grpc.Metadata | undefined): Promise<any>;
}
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export declare class GrpcWebError extends globalThis.Error {
    code: grpc.Code;
    metadata: grpc.Metadata;
    constructor(message: string, code: grpc.Code, metadata: grpc.Metadata);
}
export {};
