import type { SuiClient } from "@mysten/sui.js/client";
import { Ed25519Keypair } from "@mysten/sui.js/keypairs/ed25519";
import type { Network, SignAndSendSigner, Signer, TxHash, UnsignedTransaction } from "@wormhole-foundation/sdk-connect";
import type { SuiChains } from "./types.js";
export declare function getSuiSigner(rpc: SuiClient, privateKey: string): Promise<Signer>;
export declare class SuiSigner<N extends Network, C extends SuiChains> implements SignAndSendSigner<N, C> {
    private _chain;
    private _client;
    private _signer;
    private _debug?;
    constructor(_chain: C, _client: SuiClient, _signer: Ed25519Keypair, _debug?: boolean | undefined);
    chain(): C;
    address(): string;
    signAndSend(txns: UnsignedTransaction[]): Promise<TxHash[]>;
}
//# sourceMappingURL=signer.d.ts.map