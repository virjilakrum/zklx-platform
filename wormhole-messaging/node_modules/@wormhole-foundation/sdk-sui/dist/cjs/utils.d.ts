import type { SuiClient } from "@mysten/sui.js/client";
import { TransactionBlock } from "@mysten/sui.js/transactions";
import type { SuiBuildOutput } from "./types.js";
export declare const UPGRADE_CAP_TYPE = "0x2::package::UpgradeCap";
export declare const uint8ArrayToBCS: (arr: Uint8Array) => Uint8Array;
export declare const getOriginalPackageId: (provider: SuiClient, stateObjectId: string) => Promise<string>;
export declare const getObjectFields: (provider: SuiClient, objectId: string) => Promise<Record<string, any> | null>;
export declare const getPackageId: (provider: SuiClient, objectId: string) => Promise<string>;
export declare const getOldestEmitterCapObjectId: (provider: SuiClient, coreBridgePackageId: string, owner: string) => Promise<string | null>;
export declare const getOwnedObjectId: (provider: SuiClient, owner: string, type: string) => Promise<string | null>;
export declare const getOwnedObjectIdPaginated: (provider: SuiClient, owner: string, type: string, cursor?: string) => Promise<string | null>;
export declare const getUpgradeCapObjectId: (provider: SuiClient, owner: string, packageId: string) => Promise<string | null>;
export declare const publishPackage: (buildOutput: SuiBuildOutput, signerAddress: string) => Promise<TransactionBlock>;
export declare const newEmitterCap: (coreBridgePackageId: string, coreBridgeStateObjectId: string, owner: string) => TransactionBlock;
//# sourceMappingURL=utils.d.ts.map