/// <reference types="node" resolution-mode="require"/>
import type { Commitment, Connection, PublicKeyInitData } from '@solana/web3.js';
import { PublicKey } from '@solana/web3.js';
import type { ChainId } from '@wormhole-foundation/sdk-connect';
export declare function deriveEndpointKey(tokenBridgeProgramId: PublicKeyInitData, emitterChain: number | ChainId, emitterAddress: Buffer | Uint8Array | string): PublicKey;
export declare function getEndpointRegistration(connection: Connection, endpointKey: PublicKeyInitData, commitment?: Commitment): Promise<EndpointRegistration>;
export declare class EndpointRegistration {
    chain: ChainId;
    contract: Buffer;
    constructor(chain: number, contract: Buffer);
    static deserialize(data: Buffer): EndpointRegistration;
}
//# sourceMappingURL=endpoint.d.ts.map