import type { Network } from "@wormhole-foundation/sdk-base";
import type { ChainContext, TokenId } from "@wormhole-foundation/sdk-definitions";
import type { Wormhole } from "../wormhole.js";
import type { RouteTransferRequest } from "./request.js";
import type { Route, RouteConstructor } from "./route.js";
export declare class RouteResolver<N extends Network> {
    wh: Wormhole<N>;
    routeConstructors: RouteConstructor[];
    inputTokenList?: TokenId[];
    constructor(wh: Wormhole<N>, routeConstructors: RouteConstructor[]);
    supportedSourceTokens(chain: ChainContext<N>): Promise<TokenId[]>;
    supportedDestinationTokens(inputToken: TokenId, fromChain: ChainContext<N>, toChain: ChainContext<N>): Promise<TokenId[]>;
    findRoutes(request: RouteTransferRequest<N>): Promise<Route<N>[]>;
}
//# sourceMappingURL=resolver.d.ts.map