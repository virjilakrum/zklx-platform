"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isTokenTransferDetails = exports.AutomaticTokenBridge = exports.TokenBridge = exports.ErrNotWrapped = void 0;
const sdk_base_1 = require("@wormhole-foundation/sdk-base");
const index_js_1 = require("./../../vaa/index.js");
require("./automaticTokenBridgeLayout.js");
require("./tokenBridgeLayout.js");
const ErrNotWrapped = (token) => new Error(`Token ${token} is not a wrapped asset`);
exports.ErrNotWrapped = ErrNotWrapped;
require("../../registry.js");
/**
 * @namespace TokenBridge
 */
var TokenBridge;
(function (TokenBridge) {
    const _protocol = "TokenBridge";
    const _transferPayloads = ["Transfer", "TransferWithPayload"];
    const _attestPayloads = ["AttestMeta"];
    const _payloads = [..._transferPayloads, ..._attestPayloads];
    TokenBridge.getTransferDiscriminator = (0, sdk_base_1.lazyInstantiate)(() => (0, index_js_1.payloadDiscriminator)([_protocol, _transferPayloads]));
})(TokenBridge || (exports.TokenBridge = TokenBridge = {}));
var AutomaticTokenBridge;
(function (AutomaticTokenBridge) {
    const _protocol = "AutomaticTokenBridge";
    const _payloads = ["TransferWithRelay"];
})(AutomaticTokenBridge || (exports.AutomaticTokenBridge = AutomaticTokenBridge = {}));
function isTokenTransferDetails(thing) {
    return (thing.token !== undefined &&
        thing.amount !== undefined &&
        thing.from !== undefined &&
        thing.to !== undefined);
}
exports.isTokenTransferDetails = isTokenTransferDetails;
//# sourceMappingURL=tokenBridge.js.map