"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockTokenBridge = void 0;
class MockTokenBridge {
    rpc;
    constructor(rpc) {
        this.rpc = rpc;
    }
    isWrappedAsset(token) {
        throw new Error("Method not implemented.");
    }
    getOriginalAsset(token) {
        throw new Error("Method not implemented.");
    }
    getTokenUniversalAddress(nativeAddress) {
        throw new Error("Method not implemented.");
    }
    hasWrappedAsset(original) {
        throw new Error("Method not implemented.");
    }
    async getWrappedAsset(original) {
        throw new Error("Method not implemented.");
    }
    isTransferCompleted(vaa) {
        throw new Error("Method not implemented.");
    }
    createAttestation(address) {
        throw new Error("Method not implemented.");
    }
    submitAttestation(vaa) {
        throw new Error("Method not implemented.");
    }
    transfer(sender, recipient, token, amount, payload) {
        throw new Error("Method not implemented.");
    }
    redeem(sender, vaa, unwrapNative) {
        throw new Error("Method not implemented.");
    }
    getWrappedNative() {
        throw new Error("Method not implemented.");
    }
}
exports.MockTokenBridge = MockTokenBridge;
//# sourceMappingURL=tokenBridge.js.map