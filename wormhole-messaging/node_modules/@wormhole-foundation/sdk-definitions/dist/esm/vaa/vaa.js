import { chainItem, universalAddressItem, signatureItem, sequenceItem, guardianSetItem, } from "./../layout-items/index.js";
export function decomposeLiteral(payloadLiteral) {
    const index = payloadLiteral.indexOf(":");
    return (index !== -1
        ? [payloadLiteral.slice(0, index), payloadLiteral.slice(index + 1)]
        : [null, payloadLiteral]);
}
const guardianSignatureLayout = [
    { name: "guardianIndex", binary: "uint", size: 1 },
    { name: "signature", ...signatureItem },
];
export const headerLayout = [
    { name: "version", binary: "uint", size: 1, custom: 1, omit: true },
    { name: "guardianSet", ...guardianSetItem },
    { name: "signatures", binary: "array", lengthSize: 1, layout: guardianSignatureLayout },
];
//envelope + payload are getting hashed and signed
export const envelopeLayout = [
    { name: "timestamp", binary: "uint", size: 4 },
    { name: "nonce", binary: "uint", size: 4 },
    { name: "emitterChain", ...chainItem() },
    { name: "emitterAddress", ...universalAddressItem },
    { name: "sequence", ...sequenceItem },
    { name: "consistencyLevel", binary: "uint", size: 1 },
];
export const baseLayout = [...headerLayout, ...envelopeLayout];
//# sourceMappingURL=vaa.js.map