type AllowNull<T, B extends boolean> = B extends true ? T | null : T;
export declare const chainItem: <const C extends readonly ("Solana" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Algorand" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Near" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Sui" | "Aptos" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Btc" | "Base" | "Sei" | "Rootstock" | "Scroll" | "Mantle" | "Blast" | "Xlayer" | "Linea" | "Berachain" | "Seievm" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Neutron" | "Celestia" | "Stargaze" | "Seda" | "Dymension" | "Provenance" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky" | "PolygonSepolia")[] = ["Solana", "Ethereum", "Terra", "Bsc", "Polygon", "Avalanche", "Oasis", "Algorand", "Aurora", "Fantom", "Karura", "Acala", "Klaytn", "Celo", "Near", "Moonbeam", "Neon", "Terra2", "Injective", "Osmosis", "Sui", "Aptos", "Arbitrum", "Optimism", "Gnosis", "Pythnet", "Xpla", "Btc", "Base", "Sei", "Rootstock", "Scroll", "Mantle", "Blast", "Xlayer", "Linea", "Berachain", "Seievm", "Wormchain", "Cosmoshub", "Evmos", "Kujira", "Neutron", "Celestia", "Stargaze", "Seda", "Dymension", "Provenance", "Sepolia", "ArbitrumSepolia", "BaseSepolia", "OptimismSepolia", "Holesky", "PolygonSepolia"], const N extends boolean = false>(opts?: {
    allowedChains?: C;
    allowNull?: N;
}) => {
    readonly custom: {
        to: (val: number) => AllowNull<C[number], N>;
        from: (val: AllowNull<C[number], N>) => number;
    };
    readonly binary: "uint";
    readonly size: 2;
};
export declare const fixedChainItem: <const C extends "Solana" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Algorand" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Near" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Sui" | "Aptos" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Btc" | "Base" | "Sei" | "Rootstock" | "Scroll" | "Mantle" | "Blast" | "Xlayer" | "Linea" | "Berachain" | "Seievm" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Neutron" | "Celestia" | "Stargaze" | "Seda" | "Dymension" | "Provenance" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky" | "PolygonSepolia">(chain: C) => {
    readonly custom: {
        to: C;
        from: {
            Solana: 1;
            Ethereum: 2;
            Terra: 3;
            Bsc: 4;
            Polygon: 5;
            Avalanche: 6;
            Oasis: 7;
            Algorand: 8;
            Aurora: 9;
            Fantom: 10;
            Karura: 11;
            Acala: 12;
            Klaytn: 13;
            Celo: 14;
            Near: 15;
            Moonbeam: 16;
            Neon: 17;
            Terra2: 18;
            Injective: 19;
            Osmosis: 20;
            Sui: 21;
            Aptos: 22;
            Arbitrum: 23;
            Optimism: 24;
            Gnosis: 25;
            Pythnet: 26;
            Xpla: 28;
            Btc: 29;
            Base: 30;
            Sei: 32;
            Rootstock: 33;
            Scroll: 34;
            Mantle: 35;
            Blast: 36;
            Xlayer: 37;
            Linea: 38;
            Berachain: 39;
            Seievm: 40;
            Wormchain: 3104;
            Cosmoshub: 4000;
            Evmos: 4001;
            Kujira: 4002;
            Neutron: 4003;
            Celestia: 4004;
            Stargaze: 4005;
            Seda: 4006;
            Dymension: 4007;
            Provenance: 4008;
            Sepolia: 10002;
            ArbitrumSepolia: 10003;
            BaseSepolia: 10004;
            OptimismSepolia: 10005;
            Holesky: 10006;
            PolygonSepolia: 10007;
        }[C extends bigint ? `bigint(${C})` : C extends boolean ? `boolean(${C})` : C];
    };
    readonly binary: "uint";
    readonly size: 2;
};
export {};
//# sourceMappingURL=chain.d.ts.map