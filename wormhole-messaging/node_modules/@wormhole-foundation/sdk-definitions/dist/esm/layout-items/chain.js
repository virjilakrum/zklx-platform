import { chainToChainId, chains, toChain } from "@wormhole-foundation/sdk-base";
const chainItemBase = { binary: "uint", size: 2 };
export const chainItem = (opts) => ({
    ...chainItemBase,
    custom: {
        to: (val) => {
            if (val === 0) {
                if (!opts?.allowNull)
                    throw new Error("ChainId 0 is not valid for this protocol and action");
                return null;
            }
            const chain = toChain(val);
            const allowedChains = opts?.allowedChains ?? chains;
            if (!allowedChains.includes(chain))
                throw new Error(`Chain ${chain} not in allowed chains ${allowedChains}`);
            return chain;
        },
        from: (val) => (val == null ? 0 : chainToChainId(val)),
    },
});
export const fixedChainItem = (chain) => ({
    ...chainItemBase,
    custom: {
        to: chain,
        from: chainToChainId(chain),
    },
});
//# sourceMappingURL=chain.js.map