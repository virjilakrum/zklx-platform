"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createReadOnlyMessageTransmitterProgramInterface = exports.createMessageTransmitterProgramInterface = exports.createReadOnlyTokenMessengerProgramInterface = exports.createTokenMessengerProgramInterface = void 0;
const web3_js_1 = require("@solana/web3.js");
const anchor_1 = require("@coral-xyz/anchor");
const sdk_solana_1 = require("@wormhole-foundation/sdk-solana");
const index_js_1 = require("./../index.js");
function createTokenMessengerProgramInterface(programId, provider) {
    return new anchor_1.Program(index_js_1.idl.TokenMessengerIdl, new web3_js_1.PublicKey(programId), provider === undefined ? { connection: null } : provider);
}
exports.createTokenMessengerProgramInterface = createTokenMessengerProgramInterface;
function createReadOnlyTokenMessengerProgramInterface(programId, connection) {
    return createTokenMessengerProgramInterface(programId, sdk_solana_1.utils.createReadOnlyProvider(connection));
}
exports.createReadOnlyTokenMessengerProgramInterface = createReadOnlyTokenMessengerProgramInterface;
function createMessageTransmitterProgramInterface(programId, provider) {
    return new anchor_1.Program(index_js_1.idl.MessageTransmitterIdl, new web3_js_1.PublicKey(programId), provider === undefined ? { connection: null } : provider);
}
exports.createMessageTransmitterProgramInterface = createMessageTransmitterProgramInterface;
function createReadOnlyMessageTransmitterProgramInterface(programId, connection) {
    return createMessageTransmitterProgramInterface(programId, sdk_solana_1.utils.createReadOnlyProvider(connection));
}
exports.createReadOnlyMessageTransmitterProgramInterface = createReadOnlyMessageTransmitterProgramInterface;
//# sourceMappingURL=program.js.map