import type { Address } from '@wormhole-foundation/sdk-connect';
import { UniversalAddress } from '@wormhole-foundation/sdk-connect';
import { PublicKey } from '@solana/web3.js';
import type { AnySolanaAddress } from './types.js';
export declare const SolanaZeroAddress = "11111111111111111111111111111111";
export declare class SolanaAddress implements Address {
    static readonly byteSize = 32;
    static readonly platform: "Solana";
    readonly type: string;
    readonly address: PublicKey;
    constructor(address: AnySolanaAddress);
    unwrap(): PublicKey;
    toString(): string;
    toUint8Array(): Uint8Array;
    toNative(): this;
    toUniversalAddress(): UniversalAddress;
    static instanceof(address: any): address is SolanaAddress;
    equals(other: SolanaAddress | UniversalAddress): boolean;
}
declare module '@wormhole-foundation/sdk-connect' {
    namespace WormholeRegistry {
        interface PlatformToNativeAddressMapping {
            Solana: SolanaAddress;
        }
    }
}
//# sourceMappingURL=address.d.ts.map