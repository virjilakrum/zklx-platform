import type { Chain } from "./chains.js";
export type TokenKey = string;
export type TokenSymbol = string;
export type ChainTokens = {
    [symbol: TokenKey]: Token;
};
export type Token = {
    key: TokenKey;
    decimals: number;
    address: string;
    chain: Chain;
    symbol: TokenSymbol;
    original?: Chain;
    wrappedKey?: TokenKey;
};
export type TokenConst = Omit<Token, "chain" | "key">;
export type TokenExtraDetails = {
    key: string;
    symbol: TokenSymbol;
    nativeChain: Chain;
    coinGeckoId: string;
    displayName?: string;
};
export declare const filters: {
    byAddress: (tokenMap: ChainTokens, address: string) => Token | undefined;
    native: (tokenMap: ChainTokens) => Token | undefined;
    bySymbol: (tokenMap: ChainTokens, symbol: TokenSymbol) => Token[] | undefined;
    byKey: (tokenMap: ChainTokens, key: TokenKey) => Token | undefined;
};
export declare const isEqualCaseInsensitive: (a: string, b: string) => boolean;
//# sourceMappingURL=tokens.d.ts.map