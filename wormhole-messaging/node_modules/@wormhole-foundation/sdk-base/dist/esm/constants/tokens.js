export const filters = {
    byAddress: (tokenMap, address) => {
        return Object.values(tokenMap).find((token) => isEqualCaseInsensitive(token.address, address));
    },
    native: (tokenMap) => {
        return filters.byAddress(tokenMap, "native");
    },
    bySymbol: (tokenMap, symbol) => {
        const foundTokens = Object.values(tokenMap).filter((token) => token.symbol === symbol);
        return foundTokens && foundTokens.length > 0 ? foundTokens : undefined;
    },
    byKey: (tokenMap, key) => {
        const foundToken = Object.entries(tokenMap).find(([_key]) => key === _key);
        return foundToken ? foundToken[1] : undefined;
    },
};
export const isEqualCaseInsensitive = (a, b) => {
    return a.toLowerCase() === b.toLowerCase();
};
//# sourceMappingURL=tokens.js.map